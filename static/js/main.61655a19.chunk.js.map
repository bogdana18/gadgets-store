{"version":3,"sources":["types/Pathname.ts","context/AppContext.ts","assets/svg/logo.svg","components/Logo/Logo.tsx","components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","helpers/searchHelper.tsx","hooks/useDebounce.ts","types/SortType.ts","components/Search/Search.tsx","assets/svg/heartTransparent.svg","assets/svg/cart.svg","components/Header/Header.tsx","assets/svg/arrowUp.svg","components/Footer/Footer.tsx","pages/NotFound/NotFound.tsx","assets/svg/arrowLeft.svg","assets/svg/arrowRigth.svg","components/Carousel/Carousel.tsx","components/ButtonAddToCart/ButtonAddToCart.tsx","assets/svg/heartRed.svg","components/ButtonLike/ButtonLike.tsx","components/CharacteristicProduct/CharacteristicProduct.tsx","components/ProductItem/ProductItem.tsx","components/ProductsSlider/ProductsSlider.tsx","helpers/sortProducts.tsx","components/ShopByCategory/ShopByCategory.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","assets/svg/arrowDown.svg","components/Dropdowns/Dropdowns.tsx","components/Breadcrumbs/Breadcrumbs.tsx","components/Pagination/Pagination.tsx","components/NotResults/NotResults.tsx","components/ResultsSearch/ResultsSearch.tsx","components/ProductList/ProductList.tsx","pages/Phones/Phones.tsx","pages/Tablets/Tablets.tsx","pages/Accessories/Accessories.tsx","assets/svg/close.svg","assets/svg/plus.svg","assets/svg/minus.svg","components/CartItem/CartItem.tsx","components/ButtonBack/ButtonBack.tsx","pages/Cart/Cart.tsx","pages/Favourites/Favourites.tsx","api/fetchData.ts","components/Slider/Slider.tsx","components/Capacity/CapacityList.tsx","types/Colors.ts","components/ColorsList/ColorsList.tsx","pages/ProductDetails/ProductDetails.tsx","hooks/useLocalStorage.tsx","pages/Page.tsx","App.tsx","index.tsx"],"names":["Pathname","AppContext","createContext","favorites","favCount","handleToggleLike","inCart","inCartCount","handleToggleAddToCart","isSelectedProduct","query","isShowResSearch","productsToSearch","updateCount","AppProvider","Provider","useAppContext","useContext","Logo","to","className","src","LogoSVG","alt","PageNavLink","title","isActive","classNames","Navbar","Phones","Tablets","Accessories","updateSearchParams","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SortType","Search","memo","pathname","useLocation","useSearchParams","searchParams","setSearchParams","useState","appliedQuery","setAppliedQuery","debounceSearch","delay","debounceValue","setDebounceValue","useEffect","timer","setTimeout","Math","max","clearTimeout","useDebounce","placeholder","searchCategory","split","getPlaceholderText","isEmptyInput","length","type","onChange","e","target","onClick","Header","isShowSearchInput","heartTransparent","cart","Footer","isHidenBtnToTop","Cart","rel","document","querySelector","scrollIntoView","behavior","arrowUp","NotFound","Carousel","images","currentIndex","setCurrenIndex","index","interval","setInterval","prev","nextIndex","clearInterval","map","image","arrowLeft","arrowRigth","ButtonAddToCart","product","isSelected","ButtonLike","heartRed","CharacteristicProduct","charProd","keys","values","ProductItem","name","fullPrice","price","screen","capacity","ram","itemId","category","isSelectedFav","isSelectedInCart","ramItem","Number","parseInt","ProductsSlider","products","start","setStart","end","slice","sortProducts","sortValue","Newest","sort","a","b","localeCompare","Alphabetically","year","Price","Year","MaxDiscount","Random","random","ShopByCategory","srcImg","count","imagesBaners","HomePage","countProducts","sortedByMaxDiscount","sortedByYear","reverse","phones","tablets","accessories","Loader","Dropdowns","options","startValue","label","searchPramsKey","isOpen","setIsOpen","setValue","btnRef","useRef","handleClickOutside","current","contains","handleKeyUp","addEventListener","removeEventListener","selectClassNames","arrowClassNames","ref","arrowDown","option","search","params","page","Breadcrumbs","crumbs","filter","crumb","currentLink","join","toLowerCase","Pagination","total","perPage","currentPage","lastPage","ceil","numberOfPages","from","_","i","n","NotResults","navigate","useNavigate","ResultsSearch","id","optionsSort","optionsItemsPage","ProductList","get","sortedBy","isPaginationShow","visibleProducts","isLoading","CartItem","setCount","close","minus","plus","ButtonBack","totalSum","reduce","acc","el","href","Favourites","request","url","fetch","res","ok","Error","json","Slider","selected","setSelected","img","style","backgroundImage","CapacityList","capacityAvailable","capacityPath","replace","colors","black","white","red","silver","gold","yellow","rosegold","spacegray","coral","midnightgreen","ColorsList","colorsAvailable","color","path","bgcColor","background","ProductDetails","goods","setProduct","setIsLoading","itemProduct","find","findProductById","isProduct","useParams","productId","loadProduct","data","cellText","randomlySortedGoods","techSpecs","cell","ch","resolution","processor","camera","zoom","priceDiscount","priceRegular","description","text","useLocalStorage","initialValue","localStorage","getItem","JSON","parse","currentValue","setItem","stringify","Page","setProducts","setFavorites","setInCart","trim","poducts","loadProducts","productsFromServer","includes","newFavorites","fav","productWidthCount","newInCart","newCount","element","Home","App","Helmet","ReactDOM","render","getElementById"],"mappings":"6rBAAYA,E,4GCiBCC,EAAaC,wBAA8B,CACtDC,UAAW,GACXC,SAAU,EACVC,iBAAkB,aAClBC,OAAQ,GACRC,YAAa,EACbC,sBAAuB,aACvBC,kBAAmB,kBAAM,GACzBC,MAAO,GACPC,iBAAiB,EACjBC,iBAAkB,GAClBC,YAAa,eAGFC,EAAcb,EAAWc,SAEzBC,EAAgB,WAG3B,OAFaC,qBAAWhB,IClCX,MAA0B,iC,eCI5BiB,EAAO,WAClB,OACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,OAAvB,SACE,qBAAKC,IAAKC,EAASC,IAAI,YCGhBC,G,MAAyB,SAAC,GAAD,IAAGL,EAAH,EAAGA,GAAIM,EAAP,EAAOA,MAAP,OACpC,oBAAIL,UAAU,UAAd,SACE,cAAC,IAAD,CACED,GAAIA,EACJC,UAAW,gBAAGM,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,gBAAiB,CAAE,wBAAyBD,KAHhD,SAMGD,S,SJlBKzB,K,aAAAA,E,aAAAA,E,iBAAAA,E,2BAAAA,E,mBAAAA,E,0BAAAA,M,eKIC4B,EAAS,WACpB,OACE,qBAAKR,UAAU,SAAf,SACE,qBAAIA,UAAU,eAAd,UACE,cAAC,EAAD,CAAaD,GAAG,IAAIM,MAAM,SAC1B,cAAC,EAAD,CAAaN,GAAInB,EAAS6B,OAAQJ,MAAM,WACxC,cAAC,EAAD,CAAaN,GAAInB,EAAS8B,QAASL,MAAM,YACzC,cAAC,EAAD,CAAaN,GAAInB,EAAS+B,YAAaN,MAAM,sBCP9C,SAASO,EACdC,EACAC,GAEA,IAAMC,EAAY,IAAIC,gBAAgBH,EAAcI,YAgBpD,OAdAC,OAAOC,QAAQL,GAAgBM,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACzC,OAAVA,EACFP,EAAUQ,OAAOF,GACRG,MAAMC,QAAQH,IACvBP,EAAUQ,OAAOF,GAEjBC,EAAMF,SAAQ,SAACM,GACbX,EAAUY,OAAON,EAAKK,OAGxBX,EAAUa,IAAIP,EAAKC,MAIhBP,EAAUE,W,MCtBZ,ICFKY,ECUCC,EAAaC,gBAAK,WAC7B,IAAQC,EAAaC,cAAbD,SACR,EAAwCE,YAAgB,IAAxD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EFZmB,SAAClB,GAAgC,IAAjBmB,EAAgB,uDAAR,IACjD,EAA0CJ,mBAASf,GAAnD,mBAAOoB,EAAP,KAAsBC,EAAtB,KAYA,OAVAC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBH,EAAiBrB,KAChByB,KAAKC,IAAIP,EAAO,IAEnB,OAAO,WACLQ,aAAaJ,MAEd,CAACvB,EAAOmB,IAEJC,EEDgBQ,CAAYZ,EAAc,MAAQ,KAEzDM,qBAAU,WACRR,EAAgBxB,EAAmBuB,EACjC,CAAE7C,MAAOkD,OACV,CAACA,IAEJ,IAWMW,EANqB,WACzB,IAAMC,EAAiBpB,EAASqB,MAAM,KAAK,GAE3C,MAAM,aAAN,OAAoBD,EAApB,OAGkBE,GACdC,EAAuC,IAAxBjB,EAAakB,OAElC,OACE,sBAAKxD,UAAU,SAAf,UACE,uBACEA,UAAWO,IAAW,gBAAiB,CACrC,sBAAuBgD,IAEzBE,KAAK,OACLN,YAAaA,EACb7B,MAAOgB,EACPoB,SAAU,SAACC,GACTpB,EAAgBoB,EAAEC,OAAOtC,UAG7B,wBACE,aAAW,QACXmC,KAAK,SACLzD,UAAWO,IAAW,oBAAqB,CACzC,2BAA4BgD,IAE9BM,QAjCmB,WACvBtB,EAAgB,IAChBH,EAAgBxB,EAAmBuB,EAAc,CAAE7C,MAAO,iBCvB/C,MAA0B,6CCA1B,MAA0B,iCCW5BwE,G,MAAS,WACpB,IAAQ9B,EAAaC,cAAbD,SACR,EAAkCpC,IAA1BZ,EAAR,EAAQA,SAAUG,EAAlB,EAAkBA,YAEZ4E,EAAiC,YAAb/B,GACR,aAAbA,GACa,iBAAbA,GACa,gBAAbA,EAEL,OACE,sBAAKhC,UAAU,SAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,sBAAKA,UAAU,gBAAf,UACG+D,GAAqB,cAACjC,EAAD,IAEtB,eAAC,IAAD,CACE/B,GAAG,cACHC,UAAW,gBAAGM,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,oBACA,CACE,4BAA6BD,KALnC,UASE,qBAAKL,IAAK+D,EAAkB7D,IAAI,UAClB,IAAbnB,GAAkB,+BAAOA,OAE5B,eAAC,IAAD,CACEe,GAAG,QACHC,UAAW,gBAAGM,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,oBACA,CACE,4BAA6BD,KALnC,UASE,qBAAKL,IAAKgE,EAAM9D,IAAI,SACH,IAAhBhB,GAAqB,+BAAOA,eCnDxB,MAA0B,oCCQ5B+E,G,MAASnC,gBAAK,WACzB,IAIMoC,EAAkBlC,cAAcD,WAAapD,EAASwF,KAE5D,OACE,wBAAQpE,UAAU,SAAlB,SACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,qBAAIA,UAAU,eAAd,UACE,oBAAIA,UAAU,eAAd,SACE,cAAC,IAAD,CACED,GAAG,+BACH6D,OAAO,SACP5D,UAAU,eACVqE,IAAI,aAJN,sBASF,oBAAIrE,UAAU,eAAd,SACE,cAAC,IAAD,CACED,GAAG,YACH6D,OAAO,SACP5D,UAAU,eACVqE,IAAI,aAJN,wBASF,oBAAIrE,UAAU,eAAd,SACE,cAAC,IAAD,CACED,GAAG,yBACH6D,OAAO,SACP5D,UAAU,eACVqE,IAAI,aAJN,yBAUJ,wBACEZ,KAAK,SACLzD,UAAWO,IAAW,+BAAgC,CACpD,wBAAyB4D,IAE3BN,QAhDU,WAAO,IAAD,EACxB,UAAAS,SAASC,cAAc,kBAAvB,SAAmCC,eAAe,CAAEC,SAAU,YA0CxD,SAOE,qBAAKxE,IAAKyE,EAASvE,IAAI,yBCzDtBwE,G,MAAW,WACtB,OACE,qBAAK3E,UAAU,YAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,oBAAIA,UAAU,mBAAd,kCCNO,MAA0B,sCCA1B,MAA0B,uCCW5B4E,G,MAAsB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpC,EAAuCxC,mBAAS,GAAhD,mBAAOyC,EAAP,KAAqBC,EAArB,KA4BA,OA1BAnC,qBAAU,WACR,IAAIoC,EAAQF,EAERE,EAAQH,EAAOrB,OAAS,IAC1BwB,EAAQ,GAGNA,EAAQ,IACVA,EAAQH,EAAOrB,OAAS,GAG1B,IAAMyB,EAAWC,aAAY,WAC3BH,GAAe,SAACI,GACd,IAAIC,EAAYD,EAAO,EAMvB,OAJIC,EAAYP,EAAOrB,OAAS,IAC9B4B,EAAY,GAGPA,OAER,KAEH,OAAO,kBAAMC,cAAcJ,MAC1B,CAACH,EAAcD,IAGhB,sBAAK7E,UAAU,WAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,gBACG6E,QADH,IACGA,OADH,EACGA,EAAQS,KAAI,SAACC,EAAOP,GASnB,OARIF,EAAeD,EAAOrB,OAAS,GACjCuB,EAAe,GAGbD,EAAe,GACjBC,EAAeF,EAAOrB,OAAS,GAI/B,qBACEvD,IAAG,cAASsF,GACZpF,IAAKoF,EAELvF,UAAWO,IAAW,gBAAiB,CACrC,wBAAyByE,IAAUF,KAFhCS,QAQb,wBACE9B,KAAK,SACLI,QAAS,kBAAMkB,GAAe,SAACI,GAAD,OAAUA,EAAO,MAC/CnF,UAAU,0CAHZ,SAKE,qBAAKC,IAAKuF,EAAWrF,IAAI,gBAE3B,wBACEsD,KAAK,SACLI,QAAS,kBAAMkB,GAAe,SAACI,GAAD,OAAUA,EAAO,MAC/CnF,UAAU,0CAHZ,SAKE,qBAAKC,IAAKwF,EAAYtF,IAAI,oBAG9B,qBAAKH,UAAU,2BAAf,SACG6E,EAAOS,KAAI,SAACC,EAAOP,GAAR,OACV,wBAEE,aAAW,kBACXvB,KAAK,SACLzD,UAAWO,IAAW,qBAAsB,CAC1C,6BAA8ByE,IAAUF,IAE1CjB,QAAS,kBAAMkB,EAAeC,KANzBO,aCzEJG,EAA6B,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5CxG,EAA0BQ,IAA1BR,sBAER,OACE,wBACEqE,KAAK,SACLzD,UAAWO,IAAW,SAAU,uBAAwB,CACtD,mBAAoBqF,IAEtB/B,QAAS,kBAAMzE,EAAsBuG,IALvC,mBAOMC,EAAa,gBAAkB,kBCrB1B,MAA0B,qCCa5BC,G,MAAwB,SAAC,GAA6B,IAA3BF,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WACvC3G,EAAqBW,IAArBX,iBAER,OACE,wBACE,aAAW,OACXwE,KAAK,SACLzD,UAAU,cACV6D,QAAS,kBAAM5E,EAAiB0G,IAJlC,SAMGC,EACC,qBAAK3F,IAAK6F,EAAU3F,IAAI,aAExB,qBAAKF,IAAK+D,EAAkB7D,IAAI,yBCnB3B4F,G,MAAmC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzCC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEd,OACE,sBAAKlG,UAAU,yBAAf,UACE,oBAAIA,UAAU,+BAAd,SACGiG,EAAKX,KAAI,SAACjE,GAAD,OACR,oBAAcrB,UAAU,8BAAxB,SACGqB,GADMA,QAMb,oBAAIrB,UAAU,+BAAd,SACGkG,EAAOZ,KAAI,SAAChE,GAAD,OACV,oBAAgBtB,UAAU,gCAA1B,SACGsB,GADMA,aCTN6E,G,MAAyB,SAAC,GAAiB,IAAfR,EAAc,EAAdA,QAErCS,EASET,EATFS,KACAC,EAQEV,EARFU,UACAC,EAOEX,EAPFW,MACAC,EAMEZ,EANFY,OACAC,EAKEb,EALFa,SACAC,EAIEd,EAJFc,IACAlB,EAGEI,EAHFJ,MACAmB,EAEEf,EAFFe,OACAC,EACEhB,EADFgB,SAEF,EAAiD/G,IAAzCb,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,OAAQG,EAA3B,EAA2BA,kBACrBuH,EAAgBvH,EAAkBqH,EAAQ3H,GAC1C8H,EAAmBxH,EAAkBqH,EAAQxH,GAE7C4H,EAAO,UAAMC,OAAOC,SAASP,EAAK,IAA3B,OACPT,EAAW,CACfC,KAAM,CAAC,SAAU,WAAY,OAC7BC,OAAQ,CAAC,GAAD,OAAIK,GAAJ,UAAiBC,GAAjB,UAAgCM,KAG1C,OACE,qBAAK9G,UAAU,eAAf,SACE,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,eAAC,IAAD,CAAMD,GAAE,WAAM4G,EAAN,YAAkBD,GAAU1G,UAAU,qBAA9C,UACE,qBAAKC,IAAG,cAASsF,GAASpF,IAAI,SAASH,UAAU,sBACjD,oBAAIA,UAAU,yBAAd,SAAwCoG,OAE1C,sBAAKpG,UAAU,0BAAf,UACE,sBAAMA,UAAU,sBAAhB,oBAA2CsG,KAC3C,sBAAMtG,UAAU,2BAAhB,oBAAgDqG,QAElD,qBAAKrG,UAAU,+BAAf,SACE,cAAC,EAAD,CAAuBgG,SAAUA,MAEnC,sBAAKhG,UAAU,wBAAf,UACE,cAAC,EAAD,CAAiB2F,QAASA,EAASC,WAAYiB,IAC/C,cAAC,EAAD,CAAYlB,QAASA,EAASC,WAAYgB,gBCvCzCK,G,MAA4BlF,gBAAK,YAA0B,IAAvB1B,EAAsB,EAAtBA,MAAO6G,EAAe,EAAfA,SAEtD,EAA0B7E,mBAAS,GAAnC,mBAAO8E,EAAP,KAAcC,EAAd,KACMC,EAAMF,EAFS,EAIrB,OACE,sBAAKnH,UAAU,kBAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,oBAAIA,UAAU,+BAAd,SAA8CK,IAC9C,sBAAKL,UAAU,6BAAf,UACE,wBACE,aAAW,WACXyD,KAAK,SACLzD,UAAWO,IAAW,wCAAyC,CAC7D,0BAA2B4G,GAAS,IAEtCtD,QAAS,kBAAMuD,GAAS,SAACjC,GAAD,OAAUA,EAAO,MAN3C,SAQE,qBAAKlF,IAAKuF,EAAWrF,IAAI,gBAE3B,wBACE,aAAW,WACXsD,KAAK,SACLzD,UAAWO,IAAW,wCAAyC,CAC7D,0BAA2B8G,EAAMH,EAAS1D,OAAS,IAErDK,QAAS,kBAAMuD,GAAS,SAACjC,GAAD,OAAUA,EAAO,MAN3C,SAQE,qBAAKlF,IAAKwF,EAAYtF,IAAI,uBAIhC,qBAAKH,UAAU,iCAAf,SACGkH,EAASI,MAAMH,EAAOE,GAAK/B,KAAI,SAACK,GAAD,OAC9B,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQe,qB,ShB/C1C7E,K,gBAAAA,E,gCAAAA,E,cAAAA,E,YAAAA,E,0BAAAA,E,iBAAAA,M,KiBOL,IAAM0F,EAAe,SAACL,EAAqBM,GAChD,OAAQA,GACN,KAAK3F,EAAS4F,OACZ,OAAOP,EAASQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEvB,KAAKyB,cAAcD,EAAExB,SACxD,KAAKvE,EAASiG,eACZ,OAAOZ,EAASQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,KAAOH,EAAEG,QAC5C,KAAKlG,EAASmG,MACZ,OAAOd,EAASQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErB,MAAQsB,EAAEtB,SAC7C,KAAKzE,EAASoG,KACZ,OAAOf,EAASQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,KAAOH,EAAEG,QAE5C,KAAKlG,EAASqG,YACZ,OAAOhB,EAASQ,MAAK,SAACC,EAAGC,GAIvB,OAHcD,EAAEtB,UAAYsB,EAAErB,OAChBsB,EAAEvB,UAAYuB,EAAEtB,UAKlC,KAAKzE,EAASsG,OACZ,OAAOjB,EAASQ,MAAK,kBAAM3E,KAAKqF,SAAW,MAE7C,QACE,OAAOlB,IClBAmB,G,MAA4B,SAAC,GAEnC,IADLtI,EACI,EADJA,GAAIuI,EACA,EADAA,OAAQjI,EACR,EADQA,MAAOkI,EACf,EADeA,MAEnB,OACE,qBAAKvI,UAAU,mBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,cAAC,IAAD,CACED,GAAIA,EADN,SAGE,qBACEC,UAAWO,IACT,4BACA,CAAE,oCAA+C,iBAAVF,GACvC,CAAE,qCAAgD,YAAVA,GACxC,CACE,yCACI,gBADsCA,IANhD,SAWE,qBAAKJ,IAAG,cAASqI,GAAUnI,IAAKE,EAAOL,UAAU,8BAIrD,cAAC,IAAD,CAAMD,GAAIA,EAAIC,UAAU,0BAAxB,SACGK,IAGH,mBAAGL,UAAU,0BAAb,mBAA2CuI,EAA3C,oBC9BFC,G,MAAe,CACnB,wBACA,yBACA,+BAQWC,EAAsB,SAAC,GAAiC,IAA/BvB,EAA8B,EAA9BA,SAAUwB,EAAoB,EAApBA,cACxCC,EAAsBpB,EAAaL,EAAUrF,EAASqG,aACtDU,EAAerB,EAAaL,EAAUrF,EAASoG,MAAMY,UAE3D,OACE,qBAAK7I,UAAU,YAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,EAAD,CAAU6E,OAAQ2D,MAGpB,qBAAKxI,UAAU,uBAAf,SACE,cAACiH,EAAD,CAAgB5G,MAAM,aAAa6G,SAAUyB,MAG/C,oBAAI3I,UAAU,yBAAd,8BACA,sBAAKA,UAAU,6BAAf,UACE,cAAC,EAAD,CACED,GAAInB,EAAS6B,OACb6H,OAAO,0BACPjI,MAAM,eACNkI,MAAOG,EAAcI,SAEvB,cAAC,EAAD,CACE/I,GAAInB,EAAS8B,QACb4H,OAAO,2BACPjI,MAAM,UACNkI,MAAOG,EAAcK,UAEvB,cAAC,EAAD,CACEhJ,GAAInB,EAAS+B,YACb2H,OAAO,+BACPjI,MAAM,cACNkI,MAAOG,EAAcM,iBAGzB,qBAAKhJ,UAAU,wBAAf,SACE,cAACiH,EAAD,CAAgB5G,MAAM,mBAAmB6G,SAAU0B,YCxDhDK,G,MAAS,kBAAM,qBAAKjJ,UAAU,a,OCF5B,MAA0B,sCCiB5BkJ,G,MAAuB,SAAC,GAK9B,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,MACAC,EACI,EADJA,eAEA,EAA4BjH,oBAAS,GAArC,mBAAOkH,EAAP,KAAeC,EAAf,KAEA,EAAuBtH,cAAhBC,EAAP,oBACA,EAA0BE,mBAAS+G,GAAnC,mBAAO9H,EAAP,KAAcmI,EAAd,KACMC,EAASC,iBAA0B,MAEzC/G,qBAAU,WACR,IAAMgH,EAAqB,SAACjG,GACtB+F,EAAOG,UAAYH,EAAOG,QAAQC,SAASnG,EAAEC,SAC/C4F,GAAU,IAIRO,EAAc,SAACpG,GACL,QAAVA,EAAEtC,KAA2B,WAAVsC,EAAEtC,KACvBmI,GAAU,IASd,OALID,IACFjF,SAAS0F,iBAAiB,QAASJ,GACnCtF,SAAS0F,iBAAiB,QAASD,IAG9B,WACLzF,SAAS2F,oBAAoB,QAASL,GACtCtF,SAAS2F,oBAAoB,QAASF,MAEvC,CAACR,IAEJ,IAaMW,EAAmB3J,IAAW,oBAAqB,CACvD,4BAA6BgJ,IAGzBY,EAAkB5J,IAAW,mBAAoB,CACrD,yBAA0BgJ,IAG5B,OACE,sBAAKvJ,UAAU,YAAf,UACE,mBAAGA,UAAU,mBAAb,SAAiCqJ,IACjC,yBACEe,IAAKV,EACLjG,KAAK,SACLzD,UAAWkK,EACXrG,QAzDS,kBAAM2F,GAAWD,IAqD5B,UAMGjI,EACD,qBACErB,IAAKoK,EACLlK,IAAI,QACJH,UAAWmK,OAIdZ,GACC,oBAAIvJ,UAAU,yBAAd,SACGmJ,EAAQ7D,KAAI,SAACgF,GAAD,OACX,oBACE,cAAY,OAEZtK,UAAU,oBACV6D,QAAS,WACP4F,EAASa,GACTd,GAAU,IANd,SASE,cAAC,IAAD,CACEzJ,GAAI,CACFwK,QApDSC,EAoDeF,EAlD7B1J,EAAmBuB,EADL,YAAnBmH,EACuB,aACvBmB,KAAM,KACLnB,EAAiBkB,GAIG,eACtBlB,EAAiBkB,MAyCV,SAKGF,KAZEA,GA3CO,IAACE,YCjDdE,G,MAAc,WAEzB,IAAMC,EAAS1I,cACZD,SAASqB,MAAM,KACfuH,QAAO,SAACC,GAAD,MAAqB,KAAVA,KAEjBC,EAAc,GAGlB,OACE,sBAAK9K,UAAU,cAAf,UAEE,cAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,sBAGtB2K,EAAOrF,KAAI,SAACuF,EAAO7F,GAElB,IAAM3E,EAAQwK,EAAMxH,MAAM,KAAK0H,KAAK,KAMpC,OAHAD,GAAW,WAAQD,EAAMG,eAIvB,cAAC,IAAD,CACEjL,GAAE,UAAK+K,GAEP9K,UAAWO,IAAW,oBAAqB,CACzC,8BAA+ByE,IAAU2F,EAAOnH,OAAS,IAJ7D,SAQGnD,GANIwK,WChBJI,G,MAAwB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACtD,EAAuBlJ,YAAgB,IAAhCC,EAAP,oBACMkJ,EAAWtI,KAAKuI,KAAKJ,EAAQC,GAC7BI,EACJ/J,MAAMgK,KAAK,CAAEhI,OAAQ6H,IAAY,SAACI,EAAGC,GAAJ,OAAUA,EAAI,KAEjD,OACE,sBAAK1L,UAAU,aAAf,UACE,cAAC,IAAD,CACED,GAAI,CACFwK,OAAQ3J,EAAmBuB,EAAc,CACvCsI,MAAOW,EAAc,GAAGnK,cAG5BjB,UAAWO,IACT,mBACA,gBACA,CACE,0BAA2B6K,IAAgBG,EAAc,KAV/D,SAcE,qBAAKtL,IAAKuF,EAAWrF,IAAI,gBAG3B,oBAAIH,UAAU,mBAAd,SACGuL,EAAcjG,KAAI,SAACqG,GAClB,OACE,oBAAY3L,UAAU,mBAAtB,SACE,cAAC,IAAD,CACED,GAAI,CACFwK,OAAQ3J,EAAmBuB,EAAc,CACvCsI,KAAMkB,EAAE1K,cAGZjB,UAAWO,IACT,mBACA,CACE,2BAA4B6K,IAAgBO,IATlD,SAaGA,KAdIA,QAqBf,cAAC,IAAD,CACE5L,GAAI,CACFwK,OAAQ3J,EAAmBuB,EAAc,CACvCsI,MAAOW,EAAc,GAAGnK,cAG5BjB,UAAWO,IACT,mBACA,gBACA,CACE,0BACA6K,IAAgBG,EAAcA,EAAc/H,OAAS,KAX3D,SAeE,qBAAKvD,IAAKwF,EAAYtF,IAAI,sBC3ErByL,I,MAAa,WACxB,IAAMC,EAAWC,cAEjB,OACE,sBAAK9L,UAAU,UAAf,UACE,qBAAKA,UAAU,iBAAf,8CACA,wBACEA,UAAU,yBACVyD,KAAK,SACLI,QAAS,kBAAMgI,EAAS,MAH1B,0BCAOE,I,MAA2B,SAAC,GAAkB,IAAhB7E,EAAe,EAAfA,SACnCwB,EAAgBxB,EAAS1D,OAE/B,OACE,qBAAKxD,UAAU,iBAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,mBAAGA,UAAU,wBAAb,mBAAyC0I,EAAzC,cACmB,IAAlBA,EACC,qBAAK1I,UAAU,6BAAf,SACGkH,EAAS5B,KAAI,SAACK,GAAD,OACZ,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQqG,SAI9B,mBAAGhM,UAAU,4BAAb,uDCVJiM,I,MAAc,CAAC,SAAU,iBAAkB,UAC3CC,GAAmB,CAAC,IAAK,IAAK,KAAM,OAO7BC,GAAyBpK,gBAAK,YAA0B,IAAvBmF,EAAsB,EAAtBA,SAAU7G,EAAY,EAAZA,MACtD,EAA8CT,IAAtCL,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,iBACzB,EAAuB0C,cAAhBC,EAAP,oBACMuG,EAAgBxB,EAAS1D,OACzB4H,EAAcrE,OAAO5E,EAAaiK,IAAI,UAAY,EAClDC,EAAWlK,EAAaiK,IAAI,WAAa,GACzCjB,EAAUpE,OAAO5E,EAAaiK,IAAI,aAAe1D,EACjD2C,EAAWtI,KAAKuI,KAAK5C,EAAgByC,GACrCmB,EAAmBnB,IAAYzC,GAAiB2C,EAAW,EAE3DlE,EAAQiE,EAAcD,EAAUA,EAChC9D,EAAM+D,EAAcD,GAAWzC,EACjC0C,EAAcD,EACdzC,EAGE6D,EADiBhF,EAAaL,EAAUmF,GACP/E,MAAMH,EAAOE,GAEpD,OAAI9H,EACK,cAAC,GAAD,CAAe2H,SAAU1H,IAIhC,qBAAKQ,UAAU,eAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,EAAD,MAEF,oBAAIA,UAAU,4BAAd,SAA2CK,IAC3C,mBAAGL,UAAU,sBAAb,mBAAuC0I,EAAvC,aACmB,IAAlBA,EACC,cAAC,GAAD,IAEA,qCACE,sBAAK1I,UAAU,0BAAf,UACE,cAAC,EAAD,CACEmJ,QAAS8C,GACT7C,WAAW,mBACXC,MAAM,UACNC,eAAe,WAEjB,cAAC,EAAD,CACEH,QAAS+C,GACT9C,WAAW,MACXC,MAAM,gBACNC,eAAe,eAInB,qBAAKtJ,UAAU,6BAAf,SACGuM,EAAgBjH,KAAI,SAACK,GAAD,OACnB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQqG,YAKlC,qBAAKhM,UAAU,2BAAf,SACGsM,GACC,cAAC,EAAD,CACEpB,MAAOxC,EACPyC,QAASA,EACTC,YAAaA,cCxEd3K,GAAoB,SAAC,GAA6B,IAA3B+L,EAA0B,EAA1BA,UAAWtF,EAAe,EAAfA,SAC7C,OACE,qBAAKlH,UAAU,eAAf,SACGwM,EACC,qBAAKxM,UAAU,eAAf,SACE,cAAC,EAAD,MAGF,cAACmM,GAAD,CAAajF,SAAUA,EAAU7G,MAAM,qBCRlCK,GAAqB,SAAC,GAA6B,IAA3B8L,EAA0B,EAA1BA,UAAWtF,EAAe,EAAfA,SAC9C,OACE,qBAAKlH,UAAU,eAAf,SACGwM,EACC,qBAAKxM,UAAU,eAAf,SACE,cAAC,EAAD,MAGF,cAACmM,GAAD,CAAajF,SAAUA,EAAU7G,MAAM,eCRlCM,GAAyB,SAAC,GAA6B,IAA3B6L,EAA0B,EAA1BA,UAAWtF,EAAe,EAAfA,SAClD,OACE,qBAAKlH,UAAU,oBAAf,SACGwM,EACC,qBAAKxM,UAAU,eAAf,SACE,cAAC,EAAD,MAGF,cAACmM,GAAD,CAAajF,SAAUA,EAAU7G,MAAM,mBClBhC,OAA0B,kCCA1B,OAA0B,iCCA1B,OAA0B,kCCc5BoM,I,MAAsB,SAAC,GAAiB,IAAf9G,EAAc,EAAdA,QACpC,EAA+C/F,IAAvCR,EAAR,EAAQA,sBAAuBK,EAA/B,EAA+BA,YAE/B,EAA0B4C,mBAASsD,EAAQ4C,OAA3C,mBAAOA,EAAP,KAAcmE,EAAd,KAMA,OAJA9J,qBAAU,WACRnD,EAAY8I,EAAO5C,EAAQe,UAC1B,CAAC6B,EAAO5C,EAAQe,SAGjB,8BACE,sBAAK1G,UAAU,YAAf,UACE,wBACEyD,KAAK,SACLzD,UAAU,oBACV6D,QAAS,kBAAMzE,EAAsBuG,IAHvC,SAKE,qBAAK1F,IAAK0M,GAAOxM,IAAI,YAEvB,qBACEF,IAAG,cAAS0F,EAAQJ,OACpBpF,IAAKwF,EAAQS,KACbpG,UAAU,mBAEZ,mBAAGA,UAAU,kBAAb,SAAgC2F,EAAQS,OACxC,sBAAKpG,UAAU,qBAAf,UACE,wBACEyD,KAAK,SACLzD,UAAWO,IACT,8BACA,gBACA,CACE,0BAAqC,IAAVgI,IAG/B1E,QAAS,kBAAM6I,EAASnE,EAAQ,IATlC,SAWE,qBAAKtI,IAAK2M,GAAOzM,IAAI,YAEvB,qBAAKH,UAAU,mBAAf,SAAmCuI,IACnC,wBACE9E,KAAK,SACLzD,UAAU,4CACV6D,QAAS,kBAAM6I,EAASnE,EAAQ,IAHlC,SAKE,qBAAKtI,IAAK4M,GAAM1M,IAAI,cAGxB,oBAAGH,UAAU,iCAAb,cAEG2F,EAAQW,gBC5DNwG,I,MAAa,WACxB,IAAMjB,EAAWC,cAEjB,OACE,wBAAQrI,KAAK,SAASzD,UAAU,cAAc6D,QAAS,kBAAMgI,GAAU,IAAvE,SACE,qBAAK5L,IAAKuF,EAAWrF,IAAI,kBCGlBiE,I,MAAkB,SAAC,GAAkB,IAAhB8C,EAAe,EAAfA,SACxB/H,EAAgBS,IAAhBT,YAUF4N,EANG7F,EAAS8F,QACd,SAACC,EAAaC,GAAd,OAAoCD,EAAMC,EAAG5G,MAAQ4G,EAAG3E,QACxD,GAMJ,OACE,qBAAKvI,UAAU,OAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,iBAAf,UACG,IACD,cAAC,GAAD,OAGF,oBAAIA,UAAU,oBAAd,kBACiB,IAAhBb,EACC,oBAAIa,UAAU,gBAAd,gCAEA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,iBAAf,SACGkH,EAAS5B,KAAI,SAACK,GAAD,OACZ,cAAC,GAAD,CAA2BA,QAASA,GAArBA,EAAQqG,SAG3B,sBAAKhM,UAAU,kBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,oBAAd,oBAAuC+M,KACvC,mBAAG/M,UAAU,oBAAb,6BAA+Cb,EAA/C,eAGF,mBACEkF,IAAI,WACJ8I,KAAK,gDACL1J,KAAK,SACLzD,UAAU,iCAJZ,mCCrCDoN,I,MAAwB,SAAC,GAAkB,IAAhBlG,EAAe,EAAfA,SACtC,EAAwDtH,IAAhDL,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,iBAAkBR,EAA3C,EAA2CA,SAE3C,OAAIO,EACK,cAAC,GAAD,CAAe2H,SAAU1H,IAIhC,qBAAKQ,UAAU,aAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,EAAD,MAEF,oBAAIA,UAAU,0BAAd,wBACA,mBAAGA,UAAU,oBAAb,mBAAqChB,EAArC,YACc,IAAbA,EACC,oBAAIgB,UAAU,0BAAd,qCAEA,qBAAKA,UAAU,wBAAf,SACGkH,EAAS5B,KAAI,SAACK,GAAD,OACZ,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQqG,gBC5BlCqB,GAAO,uCAAG,WAAOC,GAAP,eAAA3F,EAAA,sEAEI4F,MALH,0DAKoBD,GAFrB,WAERE,EAFQ,QAKLC,GALK,sBAMN,IAAIC,MANE,gCAUPF,EAAIG,QAVG,2CAAH,sDCIAC,I,MAAoB,SAAC,GAAgB,IAAd/I,EAAa,EAAbA,OAClC,EAAgCxC,mBAASwC,EAAO,IAAhD,mBAAOgJ,EAAP,KAAiBC,EAAjB,KAEA,OACE,sBAAK9N,UAAU,SAAf,UACE,qBAAKA,UAAU,cAAf,SACG6E,EAAOS,KAAI,SAACyI,GAAD,OACV,wBAEE,aAAW,MACXtK,KAAK,SACLzD,UAAWO,IAAW,iBAAkB,CACtC,yBAA0BsN,IAAaE,IAEzCC,MAAO,CAAEC,gBAAgB,WAAD,OAAaF,EAAb,MACxBlK,QAAS,kBAAMiK,EAAYC,KAPtBA,QAWX,qBACE/N,UAAU,eACVgO,MAAO,CAAEC,gBAAgB,WAAD,OAAaJ,EAAb,aClBnBK,I,MAA0B,SAAC,GAA2B,IAAzBvI,EAAwB,EAAxBA,QAAS3D,EAAe,EAAfA,SACjD,OACE,mCACG2D,EAAQwI,kBAAkB7I,KAAI,SAACkB,GAC9B,IAAMZ,EAAaD,EAAQa,WAAaA,EAClC4H,EAAepM,EAASqM,QAC5B1I,EAAQa,SAASwE,cACjBxE,EAASwE,eAGX,OACE,cAAC,IAAD,CACEjL,GAAI,CAAEiC,SAAS,GAAD,OAAKoM,IACnBpO,UAAWO,IAAW,WAAY,CAChC,mBAAoBqF,IAHxB,mBAOMmB,OAAOC,SAASR,EAAU,IAPhC,QAKOA,UCdJ8H,GAAS,CACpBC,MAAO,OACPC,MAAO,OACPC,IAAK,UACLC,OAAQ,UACRC,KAAM,UACNC,OAAQ,UACRC,SAAU,UACVC,UAAW,UACXC,MAAO,UACPC,cAAe,WCXJC,I,MAAwB,SAAC,GAA2B,IAAzBtJ,EAAwB,EAAxBA,QAAS3D,EAAe,EAAfA,SAC/C,OACE,mCACG2D,EAAQuJ,gBAAgB5J,KAAI,SAAC6J,GAC5B,IAAMvJ,EAAaD,EAAQwJ,QAAUA,EAC/BC,EAAOpN,EAASqM,QAAQ1I,EAAQwJ,MAAOA,GACvCE,EAAWf,GAAOa,GAExB,OACE,cAAC,IAAD,CACEpP,GAAI,CAAEiC,SAAS,GAAD,OAAKoN,IACnB/O,MAAO8O,EACPnP,UAAWO,IAAW,cAAe,CACnC,sBAAuBqF,IAGzBoI,MAAO,CAAEsB,WAAW,GAAD,OAAKD,KADnBF,UCCJI,I,MAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,EAA8BnN,mBAAgC,MAA9D,mBAAOsD,EAAP,KAAgB8J,EAAhB,KACA,EAAkCpN,oBAAkB,GAApD,mBAAOmK,EAAP,KAAkBkD,EAAlB,KACMC,EAXgB,WAAuC,IAAtCjJ,EAAqC,uDAA5B,GAChC,OAD4D,wCAC5CkJ,MAAK,SAACjK,GAAD,OAAaA,EAAQe,SAAWA,KAUjCmJ,CAAe,OAAClK,QAAD,IAACA,OAAD,EAACA,EAASqG,GAAIwD,GAC3CM,IAAcnK,KAAagK,EACjC,EAA2BI,cAAnBC,iBAAR,MAAoB,GAApB,EACA,EAAiDpQ,IAAzCb,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,OAAQG,EAA3B,EAA2BA,kBACvBuH,GAAgB,EAChBC,GAAmB,EAEnBiJ,IACFlJ,EAAgBvH,GAA6B,OAAXsQ,QAAW,IAAXA,OAAA,EAAAA,EAAajJ,SAAU,GAAI3H,GAC7D8H,EAAmBxH,GAA6B,OAAXsQ,QAAW,IAAXA,OAAA,EAAAA,EAAajJ,SAAU,GAAIxH,IAGlE,IAAQ8C,EAAaC,cAAbD,SAEFiO,EAAW,uCAAG,4BAAAtI,EAAA,sEAEhB+H,GAAa,GAFG,SLxB8BrC,GAAQ,aAAD,OK4Bb2C,EL5Ba,UKwBrC,OAIVE,EAJU,OAMhBT,EAAWS,GANK,uBAQhBR,GAAa,GARG,uEAAH,qDAYjB9M,qBAAU,WACRqN,MACC,CAACD,IAEJ,IACIvJ,EACA0J,EAFEC,EAAsB7I,EAAaiI,EAAO3N,EAASsG,QAGrDkI,EAAY,CAAEpK,KAAM,CAAC,IAAKC,OAAQ,CAAC,KACnCF,EAAW,CAAEC,KAAM,CAAC,IAAKC,OAAQ,CAAC,KAsCtC,OApCIP,IACFc,EAAG,UAAMM,OAAOC,SAASrB,EAAQc,IAAK,IAAnC,OACH0J,EAAWxK,EAAQ2K,KAAKhL,KAAI,SAACiL,GAAD,iBAAYA,MAExCvK,EAAW,CACTC,KAAM,CAAC,SAAU,aAAc,YAAa,OAC5CC,OAAQ,CAAC,GAAD,OACHP,EAAQY,QADL,UAEHZ,EAAQ6K,YAFL,UAGH7K,EAAQ8K,WAHL,UAIHhK,KAIP4J,EAAY,CACVpK,KAAM,CACJ,SACA,aACA,YACA,MACA,SACA,OACA,QAEFC,OAAQ,CAAC,GAAD,OACHP,EAAQY,QADL,UAEHZ,EAAQ6K,YAFL,UAGH7K,EAAQ8K,WAHL,UAIHhK,GAJG,UAKHd,EAAQ+K,QALL,UAMH/K,EAAQgL,MANL,UAOHR,MAMP,oCACI3D,GAAasD,GACb,qBAAK9P,UAAU,kBAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,qBAAKA,UAAU,+BAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,wBAAf,SACE,cAAC,GAAD,MAEF,qBAAKA,UAAU,+BAAf,SAA+C2F,EAAQS,OAEvD,sBAAKpG,UAAU,2BAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,GAAD,CAAQ6E,OAAQc,EAAQd,WAE1B,sBAAK7E,UAAU,0BAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,mBAAGA,UAAU,8BAAb,8BAGA,qBAAKA,UAAU,kCAAf,SACE,cAAC,GAAD,CAAY2F,QAASA,EAAS3D,SAAUA,SAI5C,sBAAKhC,UAAU,0BAAf,UACE,mBAAGA,UAAU,8BAAb,6BAGA,qBAAKA,UAAU,kCAAf,SACE,cAAC,GAAD,CAAc2F,QAASA,EAAS3D,SAAUA,SAG9C,sBAAKhC,UAAU,6BAAf,UACE,sBAAMA,UAAU,4BAAhB,oBAAiD2F,EAAQiL,iBACzD,sBAAM5Q,UAAU,2BAAhB,oBAAgD2F,EAAQkL,mBAE1D,sBAAK7Q,UAAU,kCAAf,UACE,cAAC,EAAD,CACE2F,QAASgK,EACT/J,WAAYiB,IAEd,cAAC,EAAD,CACElB,QAASgK,EACT/J,WAAYgB,OAIhB,qBAAK5G,UAAU,kCAAf,SACE,cAAC,EAAD,CAAuBgG,SAAUA,YAKvC,sBAAKhG,UAAU,yBAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,oBAAIA,UAAU,4BAAd,mBAEA,qBAAKA,UAAU,wBAAf,SACG2F,EAAQmL,YAAYxL,KAAI,SAAC4H,GAAD,OACvB,sBAAKlN,UAAU,4BAAf,UACE,oBAAIA,UAAU,8BAAd,SACGkN,EAAG7M,QAEN,mBAAGL,UAAU,6BAAb,SAA2CkN,EAAG6D,SAJA7D,EAAG7M,eAUzD,sBAAKL,UAAU,8BAAf,UACE,oBAAIA,UAAU,6BAAd,wBACA,qBAAKA,UAAU,kCAAf,SACE,cAAC,EAAD,CAAuBgG,SAAUqK,eAKzC,cAACpJ,EAAD,CACE5G,MAAM,oBACN6G,SAAUkJ,aCvLXY,GAAkB,SAAC3P,EAAa4P,GAC3C,MAA0B5O,oBAAS,WACjC,IACE,IAAM6N,EAAOgB,aAAaC,QAAQ9P,GAElC,OAAO6O,EAAOkB,KAAKC,MAAMnB,GAAQe,EACjC,SACA,OAAOA,MANX,mBAAO3P,EAAP,KAAcmI,EAAd,KAeA,MAAO,CAACnI,EALK,SAACgQ,GACZ7H,EAAS6H,GACTJ,aAAaK,QAAQlQ,EAAK+P,KAAKI,UAAUF,OCUhCG,I,MAAW,WACtB,IAAQzP,EAAaC,cAAbD,SACR,EAAgCK,mBAAoB,IAApD,mBAAO6E,EAAP,KAAiBwK,EAAjB,KACA,EAAkCrP,oBAAkB,GAApD,mBAAOmK,EAAP,KAAkBkD,EAAlB,KACA,EAAkCsB,GAAgB,YAAa,IAA/D,mBAAOjS,EAAP,KAAkB4S,EAAlB,KACM3S,EAAWD,EAAUyE,OAC3B,EAA4BwN,GAAgB,SAAU,IAAtD,mBAAO9R,EAAP,KAAe0S,EAAf,KACMzS,EAAcD,EAAOsE,OAE3B,EAAuBtB,cACjB5C,EADN,oBAC2B8M,IAAI,UAAY,GACrC7M,EAA0C,IAAxBD,EAAMuS,OAAOrO,OAE/BnE,EAAoB,SACxBqH,EACAoL,GAEA,QAASA,EAAQlC,MAAK,SAAC1C,GAAD,OAAiBA,EAAGxG,SAAWA,MAGjDqL,EAAY,uCAAG,4BAAApK,EAAA,6DACnB+H,GAAa,GADM,kBP5BUrC,GAAQ,kBO4BlB,OAIX2E,EAJW,OAMjBN,EAAYM,GANK,uBAQjBtC,GAAa,GARI,uEAAH,qDAYlB9M,qBAAU,WACRmP,MACC,IAEH,IAsCMjJ,EAAoB5B,EACpB6B,EAAqB,GACrBC,EAAyB,GACzBN,EAAgB,CACpBI,OAAQA,EAAOtF,OACfuF,QAASA,EAAQvF,OACjBwF,YAAaA,EAAYxF,QAGvBhE,EAAgB,YAAO0H,GAE3B,OAAQlF,GACN,KAAKpD,EAAS6B,OACZjB,EAAgB,YAAOsJ,GACvB,MAEF,KAAKlK,EAAS8B,QACZlB,EAAgB,UAAOuJ,GACvB,MAEF,KAAKnK,EAAS+B,YACZnB,EAAgB,UAAOwJ,GACvB,MAEF,KAAKpK,EAASwO,WACZ5N,EAAgB,YAAOT,GACvB,MAEF,QACES,EAAgB,YAAO0H,GAU3B,OANI5H,EAAMuS,SACRrS,EAAmBA,EAAiBoL,QAAO,SAACjF,GAC1C,OAAOA,EAAQS,KAAK4E,cAAciH,SAAS3S,EAAMuS,OAAO7G,mBAK1D,cAACtL,EAAD,CACE4B,MAAO,CACLvC,YACAC,WACAC,iBAlFmB,SAAC0G,GACxB,GAAItG,EAAkBsG,EAAQe,OAAQ3H,GAAY,CAChD,IAAMmT,EAAenT,EAAU6L,QAC7B,SAACuH,GAAD,OAAkBA,EAAIzL,SAAWf,EAAQe,UAG3CiL,EAAaO,QAEbP,EAAa,GAAD,mBAAK5S,GAAL,CAAgB4G,MA2E1BzG,SACAC,cACAC,sBAzEwB,SAACuG,GAC7B,IAAMyM,EAAiB,2BAAQzM,GAAR,IAAiB4C,MAAO,IAE/C,GAAIlJ,EAAkB+S,EAAkB1L,OAAQxH,GAAS,CACvD,IAAMmT,EAAYnT,EAAO0L,QACvB,SAAC3G,GAAD,OAAmBA,EAAKyC,SAAWf,EAAQe,UAG7CkL,EAAUS,QAEVT,EAAU,GAAD,mBAAK1S,GAAL,CAAakT,MAgEpB/S,oBACAC,QACAC,kBACAC,mBACAC,YAhEc,SAAC6S,EAAkB5L,GACrC,IAAM2L,EAAYnT,EAAOoG,KAAI,SAAC4H,GAC5B,OAAIA,EAAGxG,SAAWA,EACT,2BAAKwG,GAAZ,IAAgB3E,MAAO+J,IAGlBpF,KAGT0E,EAAUS,KA2CV,SAeE,sBAAKrS,UAAU,OAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,gBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEoP,KAAK,IACLmD,QACE,cAAC,EAAD,CAAUrL,SAAUA,EAAUwB,cAAeA,MAGjD,cAAC,IAAD,CAAO0G,KAAMxQ,EAAS4T,KAAMD,QAAS,cAAC,IAAD,CAAUxS,GAAG,IAAIsO,SAAO,MAC7D,eAAC,IAAD,CAAOe,KAAMxQ,EAAS6B,OAAtB,UACE,cAAC,IAAD,CACEuE,OAAK,EACLuN,QAAS,cAAC,GAAD,CAAQrL,SAAU4B,EAAQ0D,UAAWA,MAEhD,cAAC,IAAD,CACE4C,KAAK,aACLmD,QAAS,cAAC,GAAD,CAAgB/C,MAAOtI,SAIpC,eAAC,IAAD,CAAOkI,KAAMxQ,EAAS8B,QAAtB,UACE,cAAC,IAAD,CACEsE,OAAK,EACLuN,QAAS,cAAC,GAAD,CAASrL,SAAU6B,EAASyD,UAAWA,MAElD,cAAC,IAAD,CACE4C,KAAK,aACLmD,QAAS,cAAC,GAAD,CAAgB/C,MAAOtI,SAGpC,eAAC,IAAD,CAAOkI,KAAMxQ,EAAS+B,YAAtB,UACE,cAAC,IAAD,CACEqE,OAAK,EACLuN,QACE,cAAC,GAAD,CAAarL,SAAU8B,EAAawD,UAAWA,MAGnD,cAAC,IAAD,CACE4C,KAAK,aACLmD,QAAS,cAAC,GAAD,CAAgB/C,MAAOtI,SAGpC,cAAC,IAAD,CAAOkI,KAAMxQ,EAASwF,KAAMmO,QAAS,cAAC,GAAD,CAAMrL,SAAUhI,MAErD,cAAC,IAAD,CAAOkQ,KAAMxQ,EAASwO,WAAtB,SACE,cAAC,IAAD,CAAOpI,OAAK,EAACuN,QAAS,cAAC,GAAD,CAAYrL,SAAUnI,QAE9C,cAAC,IAAD,CAAOqQ,KAAK,IAAImD,QAAS,cAAC,EAAD,WAG7B,cAACrO,EAAD,WC3MKuO,I,MAAM,WACjB,OACE,sBAAKzS,UAAU,MAAf,UACE,cAAC0S,EAAA,EAAD,UACE,sBAAMrO,IAAI,OAAOZ,KAAK,YAAY0J,KAAK,sBAEzC,cAAC,GAAD,SCNNwF,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFtO,SAASuO,eAAe,Y","file":"static/js/main.61655a19.chunk.js","sourcesContent":["export enum Pathname {\n  Home = '/home',\n  Cart = '/cart',\n  Phones = '/phones',\n  Accessories = '/accessories',\n  Tablets = '/tablets',\n  Favourites = '/favourites',\n}\n","import { createContext, useContext } from 'react';\nimport { Product } from '../types/Product';\n\ntype AppContextData = {\n  favorites: Product[];\n  favCount: number;\n  handleToggleLike: (product: Product) => void;\n  inCart: Product[];\n  inCartCount: number;\n  handleToggleAddToCart: (product: Product) => void;\n  isSelectedProduct: (itemId: string, poducts: Product[]) => boolean;\n  query: string;\n  isShowResSearch: boolean;\n  productsToSearch: Product[];\n  updateCount: (newCount: number, itemId: string) => void;\n};\n\nexport const AppContext = createContext<AppContextData>({\n  favorites: [],\n  favCount: 0,\n  handleToggleLike: () => {},\n  inCart: [],\n  inCartCount: 0,\n  handleToggleAddToCart: () => {},\n  isSelectedProduct: () => false,\n  query: '',\n  isShowResSearch: false,\n  productsToSearch: [],\n  updateCount: () => {},\n});\n\nexport const AppProvider = AppContext.Provider;\n\nexport const useAppContext = () => {\n  const data = useContext(AppContext);\n\n  return data;\n};\n","export default __webpack_public_path__ + \"static/media/logo.c9417692.svg\";","import { Link } from 'react-router-dom';\nimport LogoSVG from '../../assets/svg/logo.svg';\nimport './logo.scss';\n\nexport const Logo = () => {\n  return (\n    <Link to=\"/\" className=\"logo\">\n      <img src={LogoSVG} alt=\"logo\" />\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport './navlink.scss';\n\nexport type Props = {\n  to: string;\n  title: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, title }) => (\n  <li className=\"navlink\">\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navlink__link', { 'navlink__link--active': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  </li>\n);\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\nimport { Pathname } from '../../types/Pathname';\nimport './navbar.scss';\n\nexport const Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <ul className=\"navbar__list\">\n        <PageNavLink to=\"/\" title=\"Home\" />\n        <PageNavLink to={Pathname.Phones} title=\"Phones\" />\n        <PageNavLink to={Pathname.Tablets} title=\"Tablets\" />\n        <PageNavLink to={Pathname.Accessories} title=\"Accessories\" />\n      </ul>\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null;\n};\n\nexport function updateSearchParams(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(currentParams.toString());\n\n  Object.entries(paramsToUpdate).forEach(([key, value]) => {\n    if (value === null) {\n      newParams.delete(key);\n    } else if (Array.isArray(value)) {\n      newParams.delete(key);\n\n      value.forEach((part) => {\n        newParams.append(key, part);\n      });\n    } else {\n      newParams.set(key, value);\n    }\n  });\n\n  return newParams.toString();\n}\n","import { useEffect, useState } from 'react';\n\nexport const useDebounce = (value: string, delay = 300) => {\n  const [debounceValue, setDebounceValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebounceValue(value);\n    }, Math.max(delay, 0));\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debounceValue;\n};\n","export enum SortType {\n  Newest = 'newest',\n  Alphabetically = 'alphabetically',\n  Price = 'price',\n  Year = 'year',\n  MaxDiscount = 'maxDiscount',\n  Random = 'random',\n}\n","import classNames from 'classnames';\nimport {\n  FC, memo, useEffect, useState,\n} from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { updateSearchParams } from '../../helpers/searchHelper';\nimport { useDebounce } from '../../hooks/useDebounce';\n\nimport './search.scss';\n\nexport const Search: FC = memo(() => {\n  const { pathname } = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const debounceSearch = useDebounce(appliedQuery, 300) || null;\n\n  useEffect(() => {\n    setSearchParams(updateSearchParams(searchParams,\n      { query: debounceSearch }));\n  }, [debounceSearch]);\n\n  const handleResetValue = () => {\n    setAppliedQuery('');\n    setSearchParams(updateSearchParams(searchParams, { query: null }));\n  };\n\n  const getPlaceholderText = () => {\n    const searchCategory = pathname.split('/')[1];\n\n    return `Search in ${searchCategory}...`;\n  };\n\n  const placeholder = getPlaceholderText();\n  const isEmptyInput = appliedQuery.length !== 0;\n\n  return (\n    <div className=\"search\">\n      <input\n        className={classNames('search__input', {\n          'search__input--show': isEmptyInput,\n        })}\n        type=\"text\"\n        placeholder={placeholder}\n        value={appliedQuery}\n        onChange={(e) => {\n          setAppliedQuery(e.target.value);\n        }}\n      />\n      <button\n        aria-label=\"reset\"\n        type=\"button\"\n        className={classNames('search__reset-btn', {\n          'search__reset-btn--show': !isEmptyInput,\n        })}\n        onClick={handleResetValue}\n      />\n    </div>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/heartTransparent.dbd19c03.svg\";","export default __webpack_public_path__ + \"static/media/cart.9229aff4.svg\";","import classNames from 'classnames';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useAppContext } from '../../context/AppContext';\nimport { Logo } from '../Logo/Logo';\nimport { Navbar } from '../Navbar/Navbar';\nimport { Search } from '../Search/Search';\nimport heartTransparent from '../../assets/svg/heartTransparent.svg';\nimport cart from '../../assets/svg/cart.svg';\n\nimport './header.scss';\n\nexport const Header = () => {\n  const { pathname } = useLocation();\n  const { favCount, inCartCount } = useAppContext();\n\n  const isShowSearchInput = pathname === '/phones'\n    || pathname === '/tablets'\n    || pathname === '/accessories'\n    || pathname === '/favourites';\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <Logo />\n        <Navbar />\n      </div>\n      <div className=\"header__right\">\n        {isShowSearchInput && <Search />}\n\n        <NavLink\n          to=\"/favourites\"\n          className={({ isActive }) => classNames(\n            'header__link-icon',\n            {\n              'header__link-icon--active': isActive,\n            },\n          )}\n        >\n          <img src={heartTransparent} alt=\"heart\" />\n          {favCount !== 0 && <span>{favCount}</span>}\n        </NavLink>\n        <NavLink\n          to=\"/cart\"\n          className={({ isActive }) => classNames(\n            'header__link-icon',\n            {\n              'header__link-icon--active': isActive,\n            },\n          )}\n        >\n          <img src={cart} alt=\"cart\" />\n          {inCartCount !== 0 && <span>{inCartCount}</span>}\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/arrowUp.9c853957.svg\";","import classNames from 'classnames';\nimport { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Logo } from '../Logo/Logo';\nimport arrowUp from '../../assets/svg/arrowUp.svg';\nimport { Pathname } from '../../types/Pathname';\nimport './footer.scss';\n\nexport const Footer = memo(() => {\n  const scrollToTop = () => {\n    document.querySelector('.header')?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const isHidenBtnToTop = useLocation().pathname === Pathname.Cart;\n\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer__container\">\n        <div className=\"footer__content\">\n          <Logo />\n          <ul className=\"footer__list\">\n            <li className=\"footer__item\">\n              <Link\n                to=\"https://github.com/bogdana18\"\n                target=\"_blank\"\n                className=\"footer__link\"\n                rel=\"noreferrer\"\n              >\n                github\n              </Link>\n            </li>\n            <li className=\"footer__item\">\n              <Link\n                to=\"/contacts\"\n                target=\"_blank\"\n                className=\"footer__link\"\n                rel=\"noreferrer\"\n              >\n                contacts\n              </Link>\n            </li>\n            <li className=\"footer__item\">\n              <Link\n                to=\"https://t.me/lexusenko\"\n                target=\"_blank\"\n                className=\"footer__link\"\n                rel=\"noreferrer\"\n              >\n                rights\n              </Link>\n            </li>\n          </ul>\n          <button\n            type=\"button\"\n            className={classNames('footer__button button-square', {\n              'footer__button--hiden': isHidenBtnToTop,\n            })}\n            onClick={scrollToTop}\n          >\n            <img src={arrowUp} alt=\"arrowUp\" />\n          </button>\n        </div>\n      </div>\n    </footer>\n  );\n});\n","import './not-found.scss';\n\nexport const NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <div className=\"not-found__container\">\n        <h2 className=\"not-found__title\">Page not found</h2>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/arrowLeft.74ad2c5e.svg\";","export default __webpack_public_path__ + \"static/media/arrowRigth.a8e610bf.svg\";","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\nimport arrowLeft from '../../assets/svg/arrowLeft.svg';\nimport arrowRigth from '../../assets/svg/arrowRigth.svg';\n\nimport './carousel.scss';\n\ntype Props = {\n  images: string[];\n};\n\nexport const Carousel: FC<Props> = ({ images }) => {\n  const [currentIndex, setCurrenIndex] = useState(0);\n\n  useEffect(() => {\n    let index = currentIndex;\n\n    if (index > images.length - 1) {\n      index = 0;\n    }\n\n    if (index < 0) {\n      index = images.length - 1;\n    }\n\n    const interval = setInterval(() => {\n      setCurrenIndex((prev) => {\n        let nextIndex = prev + 1;\n\n        if (nextIndex > images.length - 1) {\n          nextIndex = 0;\n        }\n\n        return nextIndex;\n      });\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [currentIndex, images]);\n\n  return (\n    <div className=\"carousel\">\n      <div className=\"carousel__box\">\n        <div className=\"carousel__row\">\n          {images?.map((image, index) => {\n            if (currentIndex > images.length - 1) {\n              setCurrenIndex(0);\n            }\n\n            if (currentIndex < 0) {\n              setCurrenIndex(images.length - 1);\n            }\n\n            return (\n              <img\n                src={`new/${image}`}\n                alt={image}\n                key={image}\n                className={classNames('carousel__img', {\n                  'carousel__img--active': index === currentIndex,\n                })}\n              />\n            );\n          })}\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => setCurrenIndex((prev) => prev - 1)}\n          className=\"carousel__button carousel__button--prev\"\n        >\n          <img src={arrowLeft} alt=\"arrowLeft\" />\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setCurrenIndex((prev) => prev + 1)}\n          className=\"carousel__button carousel__button--next\"\n        >\n          <img src={arrowRigth} alt=\"arrowRigth\" />\n        </button>\n      </div>\n      <div className=\"carousel__pagination-box\">\n        {images.map((image, index) => (\n          <button\n            key={image}\n            aria-label=\"pagination-item\"\n            type=\"button\"\n            className={classNames('carousel__item-btn', {\n              'carousel__item-btn--active': index === currentIndex,\n            })}\n            onClick={() => setCurrenIndex(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { useAppContext } from '../../context/AppContext';\nimport { Product } from '../../types/Product';\n\ntype Props = {\n  product: Product;\n  isSelected: boolean;\n};\n\nexport const ButtonAddToCart: FC<Props> = ({ product, isSelected }) => {\n  const { handleToggleAddToCart } = useAppContext();\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames('button', 'product-item__button', {\n        'button--selected': isSelected,\n      })}\n      onClick={() => handleToggleAddToCart(product)}\n    >\n      {`${isSelected ? 'Added to cart' : 'Add to cart'}`}\n    </button>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/heartRed.d554a185.svg\";","import { FC } from 'react';\nimport { useAppContext } from '../../context/AppContext';\nimport { Product } from '../../types/Product';\nimport heartTransparent from '../../assets/svg/heartTransparent.svg';\nimport heartRed from '../../assets/svg/heartRed.svg';\n\nimport './button-like.scss';\n\ntype Props = {\n  product: Product;\n  isSelected: boolean;\n};\n\nexport const ButtonLike: FC<Props> = ({ product, isSelected }) => {\n  const { handleToggleLike } = useAppContext();\n\n  return (\n    <button\n      aria-label=\"like\"\n      type=\"button\"\n      className=\"button-like\"\n      onClick={() => handleToggleLike(product)}\n    >\n      {isSelected ? (\n        <img src={heartRed} alt=\"heartRed\" />\n      ) : (\n        <img src={heartTransparent} alt=\"heartTransparent\" />\n      )}\n    </button>\n  );\n};\n","import { FC } from 'react';\nimport './characteristic-product.scss';\n\ntype Props = {\n  charProd: { keys: string[]; values: string[]; };\n};\n\nexport const CharacteristicProduct: FC<Props> = ({ charProd }) => {\n  const { keys, values } = charProd;\n\n  return (\n    <div className=\"characteristic-product\">\n      <ul className=\"characteristic-product__list\">\n        {keys.map((key) => (\n          <li key={key} className=\"characteristic-product__key\">\n            {key}\n          </li>\n        ))}\n      </ul>\n\n      <ul className=\"characteristic-product__list\">\n        {values.map((value) => (\n          <li key={value} className=\"characteristic-product__value\">\n            {value}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { FC } from 'react';\nimport { Product } from '../../types/Product';\nimport { ButtonAddToCart } from '../ButtonAddToCart';\nimport { useAppContext } from '../../context/AppContext';\nimport { ButtonLike } from '../ButtonLike';\nimport { CharacteristicProduct } from '../CharacteristicProduct';\nimport './product-item.scss';\n\ntype Props = {\n  product: Product;\n};\n\nexport const ProductItem: FC<Props> = ({ product }) => {\n  const {\n    name,\n    fullPrice,\n    price,\n    screen,\n    capacity,\n    ram,\n    image,\n    itemId,\n    category,\n  } = product;\n  const { favorites, inCart, isSelectedProduct } = useAppContext();\n  const isSelectedFav = isSelectedProduct(itemId, favorites);\n  const isSelectedInCart = isSelectedProduct(itemId, inCart);\n\n  const ramItem = `${Number.parseInt(ram, 10)} GB`;\n  const charProd = {\n    keys: ['screen', 'capacity', 'RAM'],\n    values: [`${screen}`, `${capacity}`, `${ramItem}`],\n  };\n\n  return (\n    <div className=\"product-item\">\n      <div className=\"product-item__container\">\n        <div className=\"product-item__content\">\n          <Link to={`/${category}/${itemId}`} className=\"product-item__link\">\n            <img src={`new/${image}`} alt=\"phones\" className=\"product-item__img\" />\n            <h2 className=\"product-item__subtitle\">{name}</h2>\n          </Link>\n          <div className=\"product-item__box-price\">\n            <span className=\"product-item__price\">{`$${price}`}</span>\n            <span className=\"product-item__full-price\">{`$${fullPrice}`}</span>\n          </div>\n          <div className=\"product-item__characteristic\">\n            <CharacteristicProduct charProd={charProd} />\n          </div>\n          <div className=\"product-item__actions\">\n            <ButtonAddToCart product={product} isSelected={isSelectedInCart} />\n            <ButtonLike product={product} isSelected={isSelectedFav} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { FC, memo, useState } from 'react';\nimport { Product } from '../../types/Product';\nimport { ProductItem } from '../ProductItem';\nimport arrowLeft from '../../assets/svg/arrowLeft.svg';\nimport arrowRigth from '../../assets/svg/arrowRigth.svg';\nimport './products-slider.scss';\n\ntype Props = {\n  title: string;\n  products: Product[];\n};\n\nexport const ProductsSlider: FC<Props> = memo(({ title, products }) => {\n  const visibleCount = 4;\n  const [start, setStart] = useState(0);\n  const end = start + visibleCount;\n\n  return (\n    <div className=\"products-slider\">\n      <div className=\"products-slider__top-row\">\n        <h2 className=\"products-slider__title title\">{title}</h2>\n        <div className=\"products-slider__nagigate \">\n          <button\n            aria-label=\"nagigate\"\n            type=\"button\"\n            className={classNames('products-slider__button button-square', {\n              'button-square--disabled': start <= 0,\n            })}\n            onClick={() => setStart((prev) => prev - 1)}\n          >\n            <img src={arrowLeft} alt=\"arrowLeft\" />\n          </button>\n          <button\n            aria-label=\"nagigate\"\n            type=\"button\"\n            className={classNames('products-slider__button button-square', {\n              'button-square--disabled': end > products.length - 1,\n            })}\n            onClick={() => setStart((prev) => prev + 1)}\n          >\n            <img src={arrowRigth} alt=\"arrowRigth\" />\n          </button>\n        </div>\n      </div>\n      <div className=\"products-slider__products grid\">\n        {products.slice(start, end).map((product: Product) => (\n          <ProductItem product={product} key={product.itemId} />\n        ))}\n      </div>\n    </div>\n  );\n});\n","import { Product } from '../types/Product';\nimport { SortType } from '../types/SortType';\n\nexport type Props = {\n  products: Product[];\n};\n\nexport const sortProducts = (products: Product[], sortValue: string) => {\n  switch (sortValue) {\n    case SortType.Newest:\n      return products.sort((a, b) => a.name.localeCompare(b.name));\n    case SortType.Alphabetically:\n      return products.sort((a, b) => a.year - b.year);\n    case SortType.Price:\n      return products.sort((a, b) => a.price - b.price);\n    case SortType.Year:\n      return products.sort((a, b) => a.year - b.year);\n\n    case SortType.MaxDiscount:\n      return products.sort((a, b) => {\n        const diffA = a.fullPrice - a.price;\n        const diffB = b.fullPrice - b.price;\n\n        return diffA - diffB;\n      });\n\n    case SortType.Random:\n      return products.sort(() => Math.random() - 0.5);\n\n    default:\n      return products;\n  }\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport './shop-by-category.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  srcImg: string;\n  title: string;\n  count: number;\n};\n\nexport const ShopByCategory: FC<Props> = ({\n  to, srcImg, title, count,\n}) => {\n  return (\n    <div className=\"shop-by-category\">\n      <div className=\"shop-by-category__item\">\n        <Link\n          to={to}\n        >\n          <div\n            className={classNames(\n              'shop-by-category__box-img',\n              { 'shop-by-category__box-img--phones': title === 'Mobile phone' },\n              { 'shop-by-category__box-img--tablets': title === 'Tablets' },\n              {\n                'shop-by-category__box-img--accessories': title\n                === 'Accessories',\n              },\n            )}\n          >\n            <img src={`new/${srcImg}`} alt={title} className=\"shop-by-category__img\" />\n          </div>\n        </Link>\n\n        <Link to={to} className=\"shop-by-category__title\">\n          {title}\n        </Link>\n\n        <p className=\"shop-by-category__count\">{`${count} models`}</p>\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Carousel } from '../../components/Carousel';\nimport { ProductsSlider } from '../../components/ProductsSlider';\nimport { sortProducts } from '../../helpers/sortProducts';\nimport { Product } from '../../types/Product';\nimport { SortType } from '../../types/SortType';\nimport { ShopByCategory } from '../../components/ShopByCategory';\nimport { Pathname } from '../../types/Pathname';\nimport './home-page.scss';\n\nconst imagesBaners = [\n  'img/banner-phones.png',\n  'img/banner-tablets.png',\n  'img/banner-accessories.png',\n];\n\ntype Props = {\n  products: Product[];\n  countProducts: { phones: number; tablets: number; accessories: number };\n};\n\nexport const HomePage: FC<Props> = ({ products, countProducts }) => {\n  const sortedByMaxDiscount = sortProducts(products, SortType.MaxDiscount);\n  const sortedByYear = sortProducts(products, SortType.Year).reverse();\n\n  return (\n    <div className=\"home-page\">\n      <div className=\"home-page__container\">\n        <div className=\"home-page__carousel\">\n          <Carousel images={imagesBaners} />\n        </div>\n\n        <div className=\"home-page__hot-price\">\n          <ProductsSlider title=\"Hot prices\" products={sortedByMaxDiscount} />\n        </div>\n\n        <h1 className=\"home-page__title title\">Shop by category</h1>\n        <div className=\"home-page__categories grid\">\n          <ShopByCategory\n            to={Pathname.Phones}\n            srcImg=\"img/category-phones.png\"\n            title=\"Mobile phone\"\n            count={countProducts.phones}\n          />\n          <ShopByCategory\n            to={Pathname.Tablets}\n            srcImg=\"img/category-tablets.png\"\n            title=\"Tablets\"\n            count={countProducts.tablets}\n          />\n          <ShopByCategory\n            to={Pathname.Accessories}\n            srcImg=\"img/category-accessories.png\"\n            title=\"Accessories\"\n            count={countProducts.accessories}\n          />\n        </div>\n        <div className=\"home-page__new-models\">\n          <ProductsSlider title=\"Brand new models\" products={sortedByYear} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './loader.scss';\n\nexport const Loader = () => <div className=\"loader\" />;\n","export default __webpack_public_path__ + \"static/media/arrowDown.6559e133.svg\";","import classNames from 'classnames';\nimport {\n  FC, useRef, useState, useEffect,\n} from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { updateSearchParams } from '../../helpers/searchHelper';\nimport arrowDown from '../../assets/svg/arrowDown.svg';\n\nimport './dropdowns.scss';\n\ntype Props = {\n  options: string[];\n  startValue: string;\n  label: string;\n  searchPramsKey: string;\n};\n\nexport const Dropdowns: FC<Props> = ({\n  options,\n  startValue,\n  label,\n  searchPramsKey,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  const [searchParams] = useSearchParams();\n  const [value, setValue] = useState(startValue);\n  const btnRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (btnRef.current && !btnRef.current.contains(e.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.key === 'Tab' || e.key === 'Escape') {\n        setIsOpen(false);\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('click', handleClickOutside);\n      document.addEventListener('keyup', handleKeyUp);\n    }\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [isOpen]);\n\n  const getSearchPatams = (params: string) => {\n    if (searchPramsKey === 'perPage') {\n      return updateSearchParams(searchParams, {\n        page: '1',\n        [searchPramsKey]: params,\n      });\n    }\n\n    return updateSearchParams(searchParams, {\n      [searchPramsKey]: params,\n    });\n  };\n\n  const selectClassNames = classNames('dropdowns__select', {\n    'dropdowns__select--active': isOpen,\n  });\n\n  const arrowClassNames = classNames('dropdowns__arrow', {\n    'dropdowns__arrow--open': isOpen,\n  });\n\n  return (\n    <div className=\"dropdowns\">\n      <p className=\"dropdowns__label\">{label}</p>\n      <button\n        ref={btnRef}\n        type=\"button\"\n        className={selectClassNames}\n        onClick={toggle}\n      >\n        {value}\n        <img\n          src={arrowDown}\n          alt=\"arrow\"\n          className={arrowClassNames}\n        />\n      </button>\n\n      {isOpen && (\n        <ul className=\"dropdowns__list-option\">\n          {options.map((option) => (\n            <li\n              aria-hidden=\"true\"\n              key={option}\n              className=\"dropdowns__option\"\n              onClick={() => {\n                setValue(option);\n                setIsOpen(false);\n              }}\n            >\n              <Link\n                to={{\n                  search: getSearchPatams(option),\n                }}\n              >\n                {option}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\nimport './breadcrumbs.scss';\n\nexport const Breadcrumbs = () => {\n  // Use the `useLocation` hook to get the current page's URL and split it into crumbs\n  const crumbs = useLocation()\n    .pathname.split('/')\n    .filter((crumb) => crumb !== '');\n\n  let currentLink = '';\n\n  // Render the Breadcrumbs component\n  return (\n    <div className=\"breadcrumbs\">\n      {/* Render a link to the homepage */}\n      <Link to=\"/\" className=\"breadcrumbs__home\" />\n\n      {/* Map over the crumbs and render a link for each */}\n      {crumbs.map((crumb, index) => {\n        // Transform the crumb into a title by replacing '-' with ' '\n        const title = crumb.split('-').join(' ');\n\n        // Update the currentLink variable with the current crumb\n        currentLink += `/${crumb.toLowerCase()}`;\n\n        // Render a link for the current crumb\n        return (\n          <Link\n            to={`${currentLink}`}\n            key={crumb}\n            className={classNames('breadcrumbs__link', {\n              'breadcrumbs__link--disabled': index === crumbs.length - 1,\n            })}\n          >\n            {/* Display the crumb title */}\n            {title}\n          </Link>\n        );\n      })}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { updateSearchParams } from '../../helpers/searchHelper';\nimport arrowLeft from '../../assets/svg/arrowLeft.svg';\nimport arrowRigth from '../../assets/svg/arrowRigth.svg';\nimport './pagination.scss';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n};\n\nexport const Pagination: FC<Props> = ({ total, perPage, currentPage }) => {\n  const [searchParams] = useSearchParams('');\n  const lastPage = Math.ceil(total / perPage);\n  const numberOfPages: number[]\n  = Array.from({ length: lastPage }, (_, i) => i + 1);\n\n  return (\n    <div className=\"pagination\">\n      <Link\n        to={{\n          search: updateSearchParams(searchParams, {\n            page: (currentPage - 1).toString(),\n          }),\n        }}\n        className={classNames(\n          'pagination__item',\n          'button-square',\n          {\n            'button-square--disabled': currentPage === numberOfPages[0],\n          },\n        )}\n      >\n        <img src={arrowLeft} alt=\"arrowLeft\" />\n      </Link>\n\n      <ul className=\"pagination__list\">\n        {numberOfPages.map((n) => {\n          return (\n            <li key={n} className=\"pagination__item\">\n              <Link\n                to={{\n                  search: updateSearchParams(searchParams, {\n                    page: n.toString(),\n                  }),\n                }}\n                className={classNames(\n                  'pagination__link',\n                  {\n                    'pagination__link--active': currentPage === n,\n                  },\n                )}\n              >\n                {n}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n\n      <Link\n        to={{\n          search: updateSearchParams(searchParams, {\n            page: (currentPage + 1).toString(),\n          }),\n        }}\n        className={classNames(\n          'pagination__item',\n          'button-square',\n          {\n            'button-square--disabled':\n            currentPage === numberOfPages[numberOfPages.length - 1],\n          },\n        )}\n      >\n        <img src={arrowRigth} alt=\"arrowRigth\" />\n      </Link>\n    </div>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\nimport './not-res.scss';\n\nexport const NotResults = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"not-res\">\n      <div className=\"not-res__title\">We are sorry, products not found</div>\n      <button\n        className=\"not-res__button button\"\n        type=\"button\"\n        onClick={() => navigate('/')}\n      >\n        Go Home\n      </button>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Product } from '../../types/Product';\nimport { ProductItem } from '../ProductItem';\nimport './results-search.scss';\n\ntype Props = {\n  products: Product[];\n};\n\nexport const ResultsSearch: FC<Props> = ({ products }) => {\n  const countProducts = products.length;\n\n  return (\n    <div className=\"results-search\">\n      <div className=\"results-search__container\">\n        <p className=\"results-search__count\">{`${countProducts} results`}</p>\n        {countProducts !== 0 ? (\n          <div className=\"results-search__found grid\">\n            {products.map((product) => (\n              <ProductItem key={product.id} product={product} />\n            ))}\n          </div>\n        ) : (\n          <p className=\"results-search__not-found\">\n            Nothing was found for your request\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC, memo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ProductItem } from '../ProductItem/ProductItem';\nimport { Dropdowns } from '../Dropdowns/Dropdowns';\nimport { sortProducts } from '../../helpers/sortProducts';\nimport { Breadcrumbs } from '../Breadcrumbs';\nimport { Pagination } from '../Pagination/Pagination';\nimport { Product } from '../../types/Product';\nimport { NotResults } from '../NotResults/NotResults';\nimport { ResultsSearch } from '../ResultsSearch/ResultsSearch';\nimport { useAppContext } from '../../context/AppContext';\nimport './product-list.scss';\n\nconst optionsSort = ['newest', 'alphabetically', 'price'];\nconst optionsItemsPage = ['4', '8', '16', 'all'];\n\ntype Props = {\n  products: Product[];\n  title: string;\n};\n\nexport const ProductList: FC<Props> = memo(({ products, title }) => {\n  const { isShowResSearch, productsToSearch } = useAppContext();\n  const [searchParams] = useSearchParams();\n  const countProducts = products.length;\n  const currentPage = Number(searchParams.get('page')) || 1;\n  const sortedBy = searchParams.get('sortBy') || '';\n  const perPage = Number(searchParams.get('perPage')) || countProducts;\n  const lastPage = Math.ceil(countProducts / perPage);\n  const isPaginationShow = perPage !== countProducts && lastPage > 1;\n\n  const start = currentPage * perPage - perPage;\n  const end = currentPage * perPage <= countProducts\n    ? currentPage * perPage\n    : countProducts;\n\n  const sortedProducts = sortProducts(products, sortedBy);\n  const visibleProducts = sortedProducts.slice(start, end);\n\n  if (isShowResSearch) {\n    return <ResultsSearch products={productsToSearch} />;\n  }\n\n  return (\n    <div className=\"product-list\">\n      <div className=\"product-list__container\">\n        <div className=\"product-list__top-row\">\n          <Breadcrumbs />\n        </div>\n        <h1 className=\"product-list__title title\">{title}</h1>\n        <p className=\"product-list__count\">{`${countProducts} models`}</p>\n        {countProducts === 0 ? (\n          <NotResults />\n        ) : (\n          <>\n            <div className=\"product-list__dropdowns\">\n              <Dropdowns\n                options={optionsSort}\n                startValue=\"Choose an option\"\n                label=\"Sort by\"\n                searchPramsKey=\"sortBy\"\n              />\n              <Dropdowns\n                options={optionsItemsPage}\n                startValue=\"All\"\n                label=\"Items on page\"\n                searchPramsKey=\"perPage\"\n              />\n            </div>\n\n            <div className=\"product-list__content grid\">\n              {visibleProducts.map((product) => (\n                <ProductItem key={product.id} product={product} />\n              ))}\n            </div>\n          </>\n        )}\n        <div className=\"product-list__pagination\">\n          {isPaginationShow && (\n            <Pagination\n              total={countProducts}\n              perPage={perPage}\n              currentPage={currentPage}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { FC } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { ProductList } from '../../components/ProductList/ProductList';\nimport { Product } from '../../types/Product';\n\ntype Props = {\n  isLoading: boolean;\n  products: Product[] | [];\n};\n\nexport const Phones: FC<Props> = ({ isLoading, products }) => {\n  return (\n    <div className=\"page__phones\">\n      {isLoading ? (\n        <div className=\"page__loader\">\n          <Loader />\n        </div>\n      ) : (\n        <ProductList products={products} title=\"Mobile phones\" />\n      )}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ProductList } from '../../components/ProductList/ProductList';\nimport { Product } from '../../types/Product';\n\ntype Props = {\n  isLoading: boolean;\n  products: Product[] | [];\n};\n\nexport const Tablets: FC<Props> = ({ isLoading, products }) => {\n  return (\n    <div className=\"page__tablet\">\n      {isLoading ? (\n        <div className=\"page__loader\">\n          <Loader />\n        </div>\n      ) : (\n        <ProductList products={products} title=\"Tablets\" />\n      )}\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Loader } from '../../components/Loader/Loader';\nimport { ProductList } from '../../components/ProductList/ProductList';\nimport { Product } from '../../types/Product';\n\ntype Props = {\n  isLoading: boolean;\n  products: Product[] | [];\n};\n\nexport const Accessories: FC<Props> = ({ isLoading, products }) => {\n  return (\n    <div className=\"page__accessories\">\n      {isLoading ? (\n        <div className=\"page__loader\">\n          <Loader />\n        </div>\n      ) : (\n        <ProductList products={products} title=\"Accessories\" />\n      )}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/close.ab8ba6b8.svg\";","export default __webpack_public_path__ + \"static/media/plus.5a5c9983.svg\";","export default __webpack_public_path__ + \"static/media/minus.d4055954.svg\";","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\nimport { useAppContext } from '../../context/AppContext';\nimport { ProductInCart } from '../../types/ProductInCart';\nimport close from '../../assets/svg/close.svg';\nimport plus from '../../assets/svg/plus.svg';\nimport minus from '../../assets/svg/minus.svg';\n\nimport './cart-item.scss';\n\ntype Props = {\n  product: ProductInCart;\n};\n\nexport const CartItem: FC<Props> = ({ product }) => {\n  const { handleToggleAddToCart, updateCount } = useAppContext();\n\n  const [count, setCount] = useState(product.count);\n\n  useEffect(() => {\n    updateCount(count, product.itemId);\n  }, [count, product.itemId]);\n\n  return (\n    <div>\n      <div className=\"cart-item\">\n        <button\n          type=\"button\"\n          className=\"cart-item__remove\"\n          onClick={() => handleToggleAddToCart(product)}\n        >\n          <img src={close} alt=\"close\" />\n        </button>\n        <img\n          src={`new/${product.image}`}\n          alt={product.name}\n          className=\"cart-item__img\"\n        />\n        <p className=\"cart-item__name\">{product.name}</p>\n        <div className=\"cart-item__actions\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'cart-item__change-count-btn',\n              'button-square',\n              {\n                'button-square--disabled': count === 1,\n              },\n            )}\n            onClick={() => setCount(count - 1)}\n          >\n            <img src={minus} alt=\"minus\" />\n          </button>\n          <div className=\"cart-item__count\">{count}</div>\n          <button\n            type=\"button\"\n            className=\"cart-item__change-count-btn button-square\"\n            onClick={() => setCount(count + 1)}\n          >\n            <img src={plus} alt=\"plus\" />\n          </button>\n        </div>\n        <p className=\"cart-item__total-price-product\">\n          &#36;\n          {product.price}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\nimport arrowLeft from '../../assets/svg/arrowLeft.svg';\nimport './button-back.scss';\n\nexport const ButtonBack = () => {\n  const navigate = useNavigate();\n\n  return (\n    <button type=\"button\" className=\"button-back\" onClick={() => navigate(-1)}>\n      <img src={arrowLeft} alt=\"arrowLeft\" />\n    </button>\n  );\n};\n","import { FC } from 'react';\nimport { useAppContext } from '../../context/AppContext';\nimport { CartItem } from '../../components/CartItem';\nimport { ProductInCart } from '../../types/ProductInCart';\n// import { Modal } from '../../components/Modal';\nimport { ButtonBack } from '../../components/ButtonBack';\nimport './cart.scss';\n\ntype Props = {\n  products: ProductInCart[];\n};\n\nexport const Cart: FC<Props> = ({ products }) => {\n  const { inCartCount } = useAppContext();\n  // const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const totalPrice = () => {\n    return products.reduce(\n      (acc: number, el: ProductInCart) => acc + el.price * el.count,\n      0,\n    );\n  };\n\n  const totalSum = totalPrice();\n\n  return (\n    <div className=\"cart\">\n      <div className=\"cart__container\">\n        <div className=\"cart__navigate\">\n          {' '}\n          <ButtonBack />\n        </div>\n\n        <h2 className=\"cart__title title\">Cart</h2>\n        {inCartCount === 0 ? (\n          <h2 className=\"cart__not-res\">Your cart is empty</h2>\n        ) : (\n          <div className=\"cart__content\">\n            <div className=\"cart__products\">\n              {products.map((product) => (\n                <CartItem key={product.id} product={product} />\n              ))}\n            </div>\n            <div className=\"cart__total-box\">\n              <div className=\"cart__info\">\n                <h2 className=\"cart__total-price\">{`$${totalSum}`}</h2>\n                <p className=\"cart__total-count\">{`Total for ${inCartCount} items`}</p>\n              </div>\n\n              <a\n                rel=\"nofollow\"\n                href=\"https://secure.wayforpay.com/qr/qb11a8ee22ed5\"\n                type=\"button\"\n                className=\"cart__button button  pay__link\"\n                // onClick={() => setIsOpenModal(true)}\n              >\n                Checkout\n              </a>\n              { /* {isOpenModal && (\n                  <div className=\"cart__modal\">\n                  <Modal setIsOpenModal={setIsOpenModal} />\n                </div>\n            )} */ }\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { FC } from 'react';\nimport { Breadcrumbs } from '../../components/Breadcrumbs';\nimport { ProductItem } from '../../components/ProductItem';\nimport { ResultsSearch } from '../../components/ResultsSearch/ResultsSearch';\nimport { useAppContext } from '../../context/AppContext';\nimport { Product } from '../../types/Product';\nimport './favourites.scss';\n\ntype Props = {\n  products: Product[] | [];\n};\n\nexport const Favourites: FC<Props> = ({ products }) => {\n  const { isShowResSearch, productsToSearch, favCount } = useAppContext();\n\n  if (isShowResSearch) {\n    return <ResultsSearch products={productsToSearch} />;\n  }\n\n  return (\n    <div className=\"favourites\">\n      <div className=\"favourites__container\">\n        <div className=\"favourites__top-row\">\n          <Breadcrumbs />\n        </div>\n        <h1 className=\"favourites__title title\">Favourites</h1>\n        <p className=\"favourites__count\">{`${favCount} items`}</p>\n        {favCount === 0 ? (\n          <h2 className=\"favourites__empty-title\">Favorites list is empty</h2>\n        ) : (\n          <div className=\"favourites__list grid\">\n            {products.map((product) => (\n              <ProductItem key={product.id} product={product} />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","// The base URL for the server\nconst BASE_URL = 'https://mate-academy.github.io/react_phone-catalog/_new';\n\n// A function for making requests to the server\nconst request = async (url: string) => {\n  // Execute a fetch request using the provided URL\n  const res = await fetch(BASE_URL + url);\n\n  // If the response status is not \"ok\", throw an error\n  if (!res.ok) {\n    throw new Error();\n  }\n\n  // Parse the response as JSON and return it\n  return res.json();\n};\n\n// A function for getting a list of products\nexport const getProducts = () => request('/products.json');\n\n// A function for getting suggested products for a specific product ID\nexport const getSuggestedProducts = (id: string) => request(`/products/${id}.json`);\n","import classNames from 'classnames';\nimport { FC, useState } from 'react';\nimport './slider.scss';\n\ntype Props = {\n  images: string[];\n};\n\nexport const Slider: FC<Props> = ({ images }) => {\n  const [selected, setSelected] = useState(images[0]);\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider__col\">\n        {images.map((img) => (\n          <button\n            key={img}\n            aria-label=\"img\"\n            type=\"button\"\n            className={classNames('slider__button', {\n              'slider__button--active': selected === img,\n            })}\n            style={{ backgroundImage: `url(new/${img})` }}\n            onClick={() => setSelected(img)}\n          />\n        ))}\n      </div>\n      <div\n        className=\"slider__main\"\n        style={{ backgroundImage: `url(new/${selected})` }}\n      />\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DetailsProduct } from '../../types/DetailsProduct';\nimport './capacity-list.scss';\n\ntype Props = {\n  product: DetailsProduct;\n  pathname: string;\n};\n\nexport const CapacityList: FC<Props> = ({ product, pathname }) => {\n  return (\n    <>\n      {product.capacityAvailable.map((capacity) => {\n        const isSelected = product.capacity === capacity;\n        const capacityPath = pathname.replace(\n          product.capacity.toLowerCase(),\n          capacity.toLowerCase(),\n        );\n\n        return (\n          <Link\n            to={{ pathname: `${capacityPath}` }}\n            className={classNames('capacity', {\n              'capacity--active': isSelected,\n            })}\n            key={capacity}\n          >\n            {`${Number.parseInt(capacity, 10)} GB`}\n          </Link>\n        );\n      })}\n    </>\n  );\n};\n","export type ColorsType = {\n  black: string;\n  white: string;\n  red: string;\n  silver: string;\n  gold: string;\n  yellow: string;\n  rosegold: string;\n  spacegray: string;\n  coral: string;\n  midnightgreen: string;\n};\n\nexport const colors = {\n  black: '#000',\n  white: '#000',\n  red: '#ff0000',\n  silver: '#b5b5bd',\n  gold: '#d4af37',\n  yellow: '#ffff00',\n  rosegold: '#b76e79',\n  spacegray: '#717378',\n  coral: '#ff7f50',\n  midnightgreen: '#004953',\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { colors, ColorsType } from '../../types/Colors';\nimport { DetailsProduct } from '../../types/DetailsProduct';\nimport './colors-list.scss';\n\ntype Props = {\n  product: DetailsProduct;\n  pathname: string;\n};\n\nexport const ColorsList: FC<Props> = ({ product, pathname }) => {\n  return (\n    <>\n      {product.colorsAvailable.map((color) => {\n        const isSelected = product.color === color;\n        const path = pathname.replace(product.color, color);\n        const bgcColor = colors[color as keyof ColorsType];\n\n        return (\n          <Link\n            to={{ pathname: `${path}` }}\n            title={color}\n            className={classNames('colors-list', {\n              'colors-list--active': isSelected,\n            })}\n            key={color}\n            style={{ background: `${bgcColor}` }}\n          />\n        );\n      })}\n    </>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getSuggestedProducts } from '../../api/fetchData';\nimport { Breadcrumbs } from '../../components/Breadcrumbs';\nimport { ButtonBack } from '../../components/ButtonBack';\nimport { DetailsProduct } from '../../types/DetailsProduct';\nimport { Slider } from '../../components/Slider/Slider';\nimport { ProductsSlider } from '../../components/ProductsSlider/ProductsSlider';\nimport { ButtonAddToCart } from '../../components/ButtonAddToCart';\nimport { ButtonLike } from '../../components/ButtonLike';\nimport { Product } from '../../types/Product';\nimport { useAppContext } from '../../context/AppContext';\nimport { sortProducts } from '../../helpers/sortProducts';\nimport { SortType } from '../../types/SortType';\nimport { CapacityList } from '../../components/Capacity';\nimport { ColorsList } from '../../components/ColorsList';\nimport { CharacteristicProduct } from '../../components/CharacteristicProduct';\n\nimport './product-details.scss';\n\nconst findProductById = (itemId = '', products: Product[]) => {\n  return products.find((product) => product.itemId === itemId);\n};\n\ntype Props = {\n  goods: Product[];\n};\n\nexport const ProductDetails: FC<Props> = ({ goods }) => {\n  const [product, setProduct] = useState<DetailsProduct | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const itemProduct = findProductById(product?.id, goods);\n  const isProduct = !!product && !!itemProduct;\n  const { productId = '' } = useParams();\n  const { favorites, inCart, isSelectedProduct } = useAppContext();\n  let isSelectedFav = false;\n  let isSelectedInCart = false;\n\n  if (isProduct) {\n    isSelectedFav = isSelectedProduct(itemProduct?.itemId || '', favorites);\n    isSelectedInCart = isSelectedProduct(itemProduct?.itemId || '', inCart);\n  }\n\n  const { pathname } = useLocation();\n\n  const loadProduct = async () => {\n    try {\n      setIsLoading(true);\n\n      const data = await getSuggestedProducts(productId);\n\n      setProduct(data);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadProduct();\n  }, [productId]);\n\n  const randomlySortedGoods = sortProducts(goods, SortType.Random);\n  let ram;\n  let cellText;\n  let techSpecs = { keys: [''], values: [''] };\n  let charProd = { keys: [''], values: [''] };\n\n  if (product) {\n    ram = `${Number.parseInt(product.ram, 10)} GB`;\n    cellText = product.cell.map((ch) => ` ${ch}`);\n\n    charProd = {\n      keys: ['screen', 'resolution', 'processor', 'RAM'],\n      values: [\n        `${product.screen}`,\n        `${product.resolution}`,\n        `${product.processor}`,\n        `${ram}`,\n      ],\n    };\n\n    techSpecs = {\n      keys: [\n        'screen',\n        'resolution',\n        'processor',\n        'RAM',\n        'camera',\n        'zoom',\n        'cell',\n      ],\n      values: [\n        `${product.screen}`,\n        `${product.resolution}`,\n        `${product.processor}`,\n        `${ram}`,\n        `${product.camera}`,\n        `${product.zoom}`,\n        `${cellText}`,\n      ],\n    };\n  }\n\n  return (\n    <>\n      {!isLoading && isProduct && (\n        <div className=\"product-details\">\n          <div className=\"product-details__container\">\n            <div className=\"product-details__breadcrumbs\">\n              <Breadcrumbs />\n            </div>\n            <div className=\"product-details__back\">\n              <ButtonBack />\n            </div>\n            <div className=\"product-details__title title\">{product.name}</div>\n\n            <div className=\"product-details__content\">\n              <div className=\"product-details__top\">\n                <div className=\"product-details__slider\">\n                  <Slider images={product.images} />\n                </div>\n                <div className=\"product-details__action\">\n                  <div className=\"product-details__select\">\n                    <p className=\"product-details__small-text\">\n                      Available colors\n                    </p>\n                    <div className=\"product-details__select-buttons\">\n                      <ColorsList product={product} pathname={pathname} />\n                    </div>\n                  </div>\n\n                  <div className=\"product-details__select\">\n                    <p className=\"product-details__small-text\">\n                      Select capacity\n                    </p>\n                    <div className=\"product-details__select-buttons\">\n                      <CapacityList product={product} pathname={pathname} />\n                    </div>\n                  </div>\n                  <div className=\"product-details__price-box\">\n                    <span className=\"product-details__discount\">{`$${product.priceDiscount}`}</span>\n                    <span className=\"product-details__regular\">{`$${product.priceRegular}`}</span>\n                  </div>\n                  <div className=\"product-details__actions-button\">\n                    <ButtonAddToCart\n                      product={itemProduct}\n                      isSelected={isSelectedInCart}\n                    />\n                    <ButtonLike\n                      product={itemProduct}\n                      isSelected={isSelectedFav}\n                    />\n                  </div>\n\n                  <div className=\"product-details__characteristic\">\n                    <CharacteristicProduct charProd={charProd} />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"product-details__botom\">\n                <div className=\"product-details__description\">\n                  <h2 className=\"product-details__subtitle\">About</h2>\n\n                  <div className=\"product-details__info\">\n                    {product.description.map((el) => (\n                      <div className=\"product-details__info-box\" key={el.title}>\n                        <h3 className=\"product-details__info-title\">\n                          {el.title}\n                        </h3>\n                        <p className=\"product-details__info-text\">{el.text}</p>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"product-details__tech-specs\">\n                  <h2 className=\"product-details__subtitle \">Tech specs</h2>\n                  <div className=\"product-details__characteristic\">\n                    <CharacteristicProduct charProd={techSpecs} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ProductsSlider\n              title=\"You may also like\"\n              products={randomlySortedGoods}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { Product } from '../types/Product';\n\nexport const useLocalStorage = (key: string, initialValue: Product[]) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const data = localStorage.getItem(key);\n\n      return data ? JSON.parse(data) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const save = (currentValue: Product) => {\n    setValue(currentValue);\n    localStorage.setItem(key, JSON.stringify(currentValue));\n  };\n\n  return [value, save];\n};\n","import { FC, useEffect, useState } from 'react';\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport { Header } from '../components/Header';\nimport { Footer } from '../components/Footer/Footer';\nimport { NotFound } from './NotFound/NotFound';\nimport { HomePage } from './HomePage/HomePage';\nimport { Phones } from './Phones/Phones';\nimport { Tablets } from './Tablets/Tablets';\nimport { Accessories } from './Accessories/Accessories';\nimport { Cart } from './Cart/Cart';\nimport { Favourites } from './Favourites/Favourites';\nimport { ProductDetails } from './ProductDetails/ProductDetails';\nimport { AppProvider } from '../context/AppContext';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { Product } from '../types/Product';\nimport { ProductInCart } from '../types/ProductInCart';\nimport { getProducts } from '../api/fetchData';\nimport { Pathname } from '../types/Pathname';\nimport './page.scss';\n\nexport const Page: FC = () => {\n  const { pathname } = useLocation();\n  const [products, setProducts] = useState<Product[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [favorites, setFavorites] = useLocalStorage('favorites', []);\n  const favCount = favorites.length;\n  const [inCart, setInCart] = useLocalStorage('inCart', []);\n  const inCartCount = inCart.length;\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const isShowResSearch = query.trim().length !== 0;\n\n  const isSelectedProduct = (\n    itemId: string,\n    poducts: Product[] | ProductInCart[],\n  ): boolean => {\n    return !!poducts.find((el: Product) => el.itemId === itemId);\n  };\n\n  const loadProducts = async () => {\n    setIsLoading(true);\n\n    try {\n      const productsFromServer = await getProducts();\n\n      setProducts(productsFromServer);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadProducts();\n  }, []);\n\n  const handleToggleLike = (product: Product) => {\n    if (isSelectedProduct(product.itemId, favorites)) {\n      const newFavorites = favorites.filter(\n        (fav: Product) => fav.itemId !== product.itemId,\n      );\n\n      setFavorites(newFavorites);\n    } else {\n      setFavorites([...favorites, product]);\n    }\n  };\n\n  const handleToggleAddToCart = (product: Product | ProductInCart) => {\n    const productWidthCount = { ...product, count: 1 };\n\n    if (isSelectedProduct(productWidthCount.itemId, inCart)) {\n      const newInCart = inCart.filter(\n        (cart: Product) => cart.itemId !== product.itemId,\n      );\n\n      setInCart(newInCart);\n    } else {\n      setInCart([...inCart, productWidthCount]);\n    }\n  };\n\n  const updateCount = (newCount: number, itemId: string) => {\n    const newInCart = inCart.map((el: ProductInCart) => {\n      if (el.itemId === itemId) {\n        return { ...el, count: newCount };\n      }\n\n      return el;\n    });\n\n    setInCart(newInCart);\n  };\n\n  const phones: Product[] = products;\n  const tablets: Product[] = [];\n  const accessories: Product[] = [];\n  const countProducts = {\n    phones: phones.length,\n    tablets: tablets.length,\n    accessories: accessories.length,\n  };\n\n  let productsToSearch = [...products];\n\n  switch (pathname) {\n    case Pathname.Phones:\n      productsToSearch = [...phones];\n      break;\n\n    case Pathname.Tablets:\n      productsToSearch = [...tablets];\n      break;\n\n    case Pathname.Accessories:\n      productsToSearch = [...accessories];\n      break;\n\n    case Pathname.Favourites:\n      productsToSearch = [...favorites];\n      break;\n\n    default:\n      productsToSearch = [...products];\n      break;\n  }\n\n  if (query.trim()) {\n    productsToSearch = productsToSearch.filter((product: Product) => {\n      return product.name.toLowerCase().includes(query.trim().toLowerCase());\n    });\n  }\n\n  return (\n    <AppProvider\n      value={{\n        favorites,\n        favCount,\n        handleToggleLike,\n        inCart,\n        inCartCount,\n        handleToggleAddToCart,\n        isSelectedProduct,\n        query,\n        isShowResSearch,\n        productsToSearch,\n        updateCount,\n      }}\n    >\n      <div className=\"page\">\n        <Header />\n        <div className=\"page__content\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <HomePage products={products} countProducts={countProducts} />\n              }\n            />\n            <Route path={Pathname.Home} element={<Navigate to=\"/\" replace />} />\n            <Route path={Pathname.Phones}>\n              <Route\n                index\n                element={<Phones products={phones} isLoading={isLoading} />}\n              />\n              <Route\n                path=\":productId\"\n                element={<ProductDetails goods={products} />}\n              />\n            </Route>\n\n            <Route path={Pathname.Tablets}>\n              <Route\n                index\n                element={<Tablets products={tablets} isLoading={isLoading} />}\n              />\n              <Route\n                path=\":productId\"\n                element={<ProductDetails goods={products} />}\n              />\n            </Route>\n            <Route path={Pathname.Accessories}>\n              <Route\n                index\n                element={\n                  <Accessories products={accessories} isLoading={isLoading} />\n                }\n              />\n              <Route\n                path=\":productId\"\n                element={<ProductDetails goods={products} />}\n              />\n            </Route>\n            <Route path={Pathname.Cart} element={<Cart products={inCart} />} />\n\n            <Route path={Pathname.Favourites}>\n              <Route index element={<Favourites products={favorites} />} />\n            </Route>\n            <Route path=\"*\" element={<NotFound />} />\n          </Routes>\n        </div>\n        <Footer />\n      </div>\n    </AppProvider>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { Page } from './pages/Page';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <link rel=\"icon\" type=\"image/svg\" href=\"new/favicon.svg\" />\n      </Helmet>\n      <Page />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}